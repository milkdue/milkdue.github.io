<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Github+jsDelivr搭建自己的免费CDN</title>
      <link href="2021/04/11/Github-jsDelivr%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%8D%E8%B4%B9CDN/"/>
      <url>2021/04/11/Github-jsDelivr%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%8D%E8%B4%B9CDN/</url>
      
        <content type="html"><![CDATA[<ul><li>新建一个github仓库，命名为cdn</li><li>关联仓库，将文件push上去</li></ul><p><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.1/blog/cdn/1.png" alt="release"></p><ul><li>填写tag version版本号</li><li>jsDeliver的引用</li></ul><div class="hide-toggle" style="border: 1px solid #FF7242"><div class="hide-button toggle-title" style="background-color: #FF7242;color: #fff"><i class="fas fa-caret-right fa-fw"></i><span>jsDeliver的引用</span></div>    <div class="hide-content"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径</span><br><span class="line"></span><br><span class="line"># 例如</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;milkdue&#x2F;cdn@1.1&#x2F;img&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure></div></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="">小提示  </button><span class="hide-content">新上传文件后需要发布新版本Draft a new release</span></span>]]></content>
      
      
      <categories>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html</title>
      <link href="2021/04/10/html/"/>
      <url>2021/04/10/html/</url>
      
        <content type="html"><![CDATA[<h2 id="1-HTML简介"><a href="#1-HTML简介" class="headerlink" title="1. HTML简介"></a>1. HTML简介</h2><blockquote><p>根据W3C的规范，1️⃣个网页有三个部分组成：结构、表现🈴行为，这三个部分分别对应HTML、CSS、JavaScript，一个设计优良🉐网页，要求结构、表现、行为3️⃣者分离。HTML是用来描述网页的一种语言—超文本标记语言</p></blockquote><h2 id="2-HTML后缀名"><a href="#2-HTML后缀名" class="headerlink" title="2. HTML后缀名"></a>2. HTML后缀名</h2><ol><li>.html</li><li>.htm</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- doctype 文档声明 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- html根标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- head包含文档的元数据 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页面的可见内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我的第一个标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>我的第一个段落。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-HTML元素"><a href="#3-HTML元素" class="headerlink" title="3. HTML元素"></a>3. HTML元素</h2><blockquote><p>HTML文档由HTML元素定义</p></blockquote><ol><li>HTML元素以开始标签起始</li><li>HTML元素以结束标签结束</li><li>元素的内容是开始标签与结束标签之间的内容</li><li>元素可以具有空内容</li><li>大多数HTML元素可以嵌套</li></ol><h2 id="4-HTML属性"><a href="#4-HTML属性" class="headerlink" title="4. HTML属性"></a>4. HTML属性</h2><ol><li>属性可以在元素中添加附加信息</li><li>属性在开始标签中描述</li><li>以名值对的形式出现</li></ol><h2 id="5-HTML注释"><a href="#5-HTML注释" class="headerlink" title="5. HTML注释"></a>5. HTML注释</h2><ol><li><code>&lt;!-- 这是注释 --&gt;</code></li></ol><h2 id="6-标题"><a href="#6-标题" class="headerlink" title="6. 标题"></a>6. 标题</h2><ol><li><code>&lt;h1&gt;我的第一个标题&lt;/h1&gt;</code></li><li><code>h1~h6</code></li></ol><h2 id="7-段落"><a href="#7-段落" class="headerlink" title="7. 段落"></a>7. 段落</h2><ol><li><code>&lt;p&gt;我的第一个段落&lt;/p&gt;</code></li><li>HTML代码中的所有连续的空行（换行）会被显示为一个空格</li></ol><h2 id="8-文本格式化"><a href="#8-文本格式化" class="headerlink" title="8. 文本格式化"></a>8. 文本格式化</h2><h3 id="8-1-文本格式化标签"><a href="#8-1-文本格式化标签" class="headerlink" title="8.1. 文本格式化标签"></a>8.1. 文本格式化标签</h3><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>b</code></td><td align="center">粗体文字</td></tr><tr><td align="center"><code>i</code></td><td align="center">斜体文字</td></tr><tr><td align="center"><code>em</code></td><td align="center">斜体文字(着重)</td></tr><tr><td align="center"><code>strong</code></td><td align="center">粗体文字(语气加重)</td></tr><tr><td align="center"><code>small</code></td><td align="center">小号文字</td></tr><tr><td align="center"><code>sub</code></td><td align="center">下标</td></tr><tr><td align="center"><code>sup</code></td><td align="center">上标</td></tr><tr><td align="center"><code>ins</code></td><td align="center">插入文字</td></tr><tr><td align="center"><code>del</code></td><td align="center">删除文字</td></tr></tbody></table><h3 id="8-2-计算机输出标签"><a href="#8-2-计算机输出标签" class="headerlink" title="8.2. 计算机输出标签"></a>8.2. 计算机输出标签</h3><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>code</code></td><td align="center">代码标签</td></tr><tr><td align="center"><code>pre</code></td><td align="center">预格式文本</td></tr><tr><td align="center"><code>samp</code></td><td align="center">计算机代码样本</td></tr><tr><td align="center"><code>var</code></td><td align="center">定义变量</td></tr><tr><td align="center"><code>kbd</code></td><td align="center">键盘码</td></tr></tbody></table><h3 id="8-3-引文-引用-及标签定义"><a href="#8-3-引文-引用-及标签定义" class="headerlink" title="8.3. 引文, 引用, 及标签定义"></a>8.3. 引文, 引用, 及标签定义</h3><table><thead><tr><th align="center">标签</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center"><code>abbr</code></td><td align="center">定义缩写</td></tr><tr><td align="center"><code>address</code></td><td align="center">定义地址</td></tr><tr><td align="center"><code>blockquote</code></td><td align="center">定义长引用</td></tr><tr><td align="center"><code>bdo</code></td><td align="center">定义文字方向</td></tr><tr><td align="center"><code>q</code></td><td align="center">定义短引用</td></tr></tbody></table><h4 id="8-3-1-abbr定义缩写"><a href="#8-3-1-abbr定义缩写" class="headerlink" title="8.3.1. abbr定义缩写"></a>8.3.1. abbr定义缩写</h4><ol><li><code>&lt;abbr title=&quot;Global positioning system&quot;&gt;GPS&lt;/abbr&gt;</code></li><li>鼠标悬停会出现完整信息</li></ol><h4 id="8-3-2-bdo定义文字方向"><a href="#8-3-2-bdo定义文字方向" class="headerlink" title="8.3.2. bdo定义文字方向"></a>8.3.2. bdo定义文字方向</h4><ol><li><code>&lt;bdo dir=&quot;rtl&quot;&gt;azdf&lt;/bdo&gt;</code></li><li>属性dir可选rtl(right to left)或者ltr</li></ol><h4 id="8-3-3-blockquote和q定义长引用"><a href="#8-3-3-blockquote和q定义长引用" class="headerlink" title="8.3.3. blockquote和q定义长引用"></a>8.3.3. blockquote和q定义长引用</h4><ol><li><code>&lt;blockquote cite=&quot;www.baidu.com&quot;&gt;1111111&lt;/blockquote&gt;</code></li><li>浏览器通常会对<code>&lt;blockquote&gt;</code>元素进行缩进</li><li>属性cite来表示引入的地址</li></ol><h2 id="9-链接"><a href="#9-链接" class="headerlink" title="9. 链接"></a>9. 链接</h2><ol><li><code>&lt;a href=&quot;www.baidu.com&quot;&gt;百度一下&lt;/a&gt;</code></li><li>“链接文本” 不必一定是文本，图片或其他HTML元素都可以成为链接</li></ol><h3 id="9-1-链接属性"><a href="#9-1-链接属性" class="headerlink" title="9.1. 链接属性"></a>9.1. 链接属性</h3><ol><li>href 链接的目标URL<ul><li>也可以是另一个a标签的id加上前缀#，点击跳转到该id的链接处</li><li>电子邮件<ul><li><code>&lt;a href=&quot;mailto:321432896@qq.com&quot;&gt;</code></li></ul></li></ul></li><li>target定义打开连接的方式<ul><li>_blank  新建标签页打开</li><li>_parent</li><li>_self 默认值，在该窗口下打开</li><li>_top</li></ul></li><li>download<ul><li>指定下载的文件的名字，可以不必指定文件扩展名，由浏览器自动加，下载的文件是href指向的文件</li><li><code>&lt;a href=&quot;img/1.png&quot; download=&quot;load&quot;&gt;下载图片&lt;/a&gt;</code></li></ul></li><li>id<ul><li>用于创建在一个HTML文档书签标记，用于快速跳转到该位置</li></ul></li></ol><h2 id="10-头部"><a href="#10-头部" class="headerlink" title="10. 头部"></a>10. 头部</h2><h3 id="10-1-head"><a href="#10-1-head" class="headerlink" title="10.1. head"></a>10.1. head</h3><ol><li><code>title</code>文档标题</li><li><code>base</code>所有链接的默认链接地址(可以在其他链接上使用相对链接，那么完整的链接就是base链接 + 相对链接)</li><li><code>meta</code><ul><li>属性<ul><li>name：设置数据的名字</li><li>content：设置数据🉐值</li><li>http-equiv：设置Http协议的响应头</li></ul></li><li>功能<ul><li>设置网页🉐描述✉️息(<code>&lt;meta name=&quot;description&quot; content=&quot;web&quot;&gt;</code>)</li><li>设置网页的关键字(<code>&lt;meta name=&quot;keywords&quot; content=&quot;HTML5&quot;&gt;</code>)</li><li>设置网页🉐重定向(<code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;3;url=https://www.baidu.com&quot;&gt;</code>)(3s跳转至百度)</li><li>设置网页的作者(<code>&lt;meta name=&quot;author&quot; content=&quot;小李&quot;&gt;</code>)</li></ul></li></ul></li><li><code>link</code>引入外部样式表<ul><li>属性<ul><li>type</li><li>href(外部样式表地址)</li></ul></li></ul></li><li><code>script</code>引入脚本<ul><li>属性<ul><li>async(值就是async可以不写值，只写属性（布尔属性，只要写就可以），表示异步加载脚本文件，仅适用于外部脚本)</li><li>charset(规定编码)</li><li>type(脚本类型)</li><li>src(脚本地址)</li><li>defer(表示当页面加载完以后再执行脚本，仅适用于外部脚本)</li></ul></li></ul></li><li><code>style</code>引入样式</li></ol><h2 id="11-图像"><a href="#11-图像" class="headerlink" title="11. 图像"></a>11. 图像</h2><h3 id="11-1-img"><a href="#11-1-img" class="headerlink" title="11.1. img"></a>11.1. img</h3><ol><li><code>&lt;img src=&quot;/images/logo.png&quot; /&gt;</code></li><li>属性<ul><li>src(图像的地址)</li><li>alt(在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息)</li><li>height</li><li>width</li></ul></li></ol><h3 id="11-2-map"><a href="#11-2-map" class="headerlink" title="11.2. map"></a>11.2. map</h3><ol><li>属性<ul><li>name(必须，为image-map规定的名称)</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- shape指的是点击区域的形状  coords指的是链接区域在图片中的坐标（像素为单位） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">map</span> <span class="attr">name</span>=<span class="string">&quot;planetmap&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 矩形：(左上角顶点坐标为(x1,y1)，右下角顶点坐标为(x2,y2)) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;rect&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;x1,y1,x2,y2&quot;</span> <span class="attr">href</span>=<span class="string">url</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 圆形：(圆心坐标为(X1,y1)，半径为r) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;circle&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;x1,y1,r&quot;</span> <span class="attr">href</span>=<span class="string">url</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 多边形：(各顶点坐标依次为(x1,y1)、(x2,y2)、(x3,y3) ......) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">area</span> <span class="attr">shape</span>=<span class="string">&quot;poly&quot;</span> <span class="attr">coords</span>=<span class="string">&quot;x1,y1,x2,y2 ......&quot;</span> <span class="attr">href</span>=<span class="string">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-表格"><a href="#12-表格" class="headerlink" title="12. 表格"></a>12. 表格</h2><h3 id="12-1-标签"><a href="#12-1-标签" class="headerlink" title="12.1. 标签"></a>12.1. 标签</h3><ol><li><code>table</code> 表格<ul><li>属性cellspacing，单元格间距  <code>cellspacing=0</code>单元格距离为0</li><li>属性cellpadding，单元格边距  <code>cellpadding=10</code>单元格边距10px</li><li>属性border，表格单元是否拥有边框，<code>border=1</code>边框1px</li></ul></li><li><code>tr</code> 一行</li><li><code>th</code> 表头<ul><li>属性colspan列合并  <code>colspan=2</code>合并两列</li><li>属性rowspan列合并  <code>rowspan=2</code>合并两行</li></ul></li><li><code>td</code> 单元格</li><li><code>thead</code>  页眉</li><li><code>tbody</code>  主体</li><li><code>tfoot</code>  页脚</li><li><code>caption</code> 标题</li></ol><h2 id="13-列表"><a href="#13-列表" class="headerlink" title="13. 列表"></a>13. 列表</h2><h3 id="13-1-无序列表"><a href="#13-1-无序列表" class="headerlink" title="13.1. 无序列表"></a>13.1. 无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>页眉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>页脚<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-2-有序列表"><a href="#13-2-有序列表" class="headerlink" title="13.2. 有序列表"></a>13.2. 有序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>页眉<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>页脚<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="13-3-自定义列表"><a href="#13-3-自定义列表" class="headerlink" title="13.3. 自定义列表"></a>13.3. 自定义列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自定义列表以 &lt;dl&gt; 标签开始。每个自定义列表项以 &lt;dt&gt; 开始。每个自定义列表项的定义以 &lt;dd&gt; 开始 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Coffee<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- black hot drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>Milk<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>- white cold drink<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="14-区块"><a href="#14-区块" class="headerlink" title="14. 区块"></a>14. 区块</h2><ol><li>块级元素<ul><li>块级元素在浏览器显示时，通常会以新行来开始（和结束）</li></ul></li><li>内联元素<ul><li>内联元素在显示时通常不会以新行开始</li></ul></li></ol><h2 id="15-表单"><a href="#15-表单" class="headerlink" title="15. 表单"></a>15. 表单</h2><h3 id="15-1-form"><a href="#15-1-form" class="headerlink" title="15.1. form"></a>15.1. form</h3><ol><li>属性<ul><li>action(提交表单时向何处发送表单数据)</li><li>autocomplete(默认值on，开启，可选值on / off)</li><li>enctype(向服务器发送表单数据之前如何对其进行编码，只针对post方法)<ul><li><code>application/x-www-form-urlencoded</code>默认值，在发送前对所有字符进行编码（将空格转换为 “+” 符号，特殊字符转换为 ASCII HEX 值）</li><li><code>multipart/form-data</code>上传文件时必须使用</li><li><code>text/plain</code> 将空格转换为 “+” 符号，但不编码特殊字符</li></ul></li><li>method(发送表单数据的 HTTP 方法)<ul><li>get</li><li>post</li></ul></li><li>novalidate(布尔类型，提交表单时不进行验证)</li></ul></li></ol><h3 id="15-2-input"><a href="#15-2-input" class="headerlink" title="15.2. input"></a>15.2. input</h3><ol><li>type(属性)<ul><li>button(按钮)</li><li>checkbox(多选框)</li><li>color(颜色板，拾色器)</li><li>date(日期选择框)</li><li>datetime-local(时间选择框)</li><li>file(上传文件)</li><li>hidden(隐藏域 隐藏输入框，一般传输固定信息例如_method)</li><li>month(月份选择框)</li><li>number(数字输入框)</li><li>password(密码输入框)</li><li>radio(单选框)</li><li>range(进度条选择框)</li><li>reset(重置按钮)</li><li>submit(提交按钮)</li><li>text(文本输入框)</li><li>time(时间选择框)</li><li>week(周选择框)</li></ul></li><li>alt<ul><li>只针对type=image</li><li>定义图像输入的替代文本</li></ul></li><li>autocomplete<ul><li>默认值on</li><li>输入自动完成</li></ul></li><li>autofocus<ul><li>布尔类型</li><li>是否在页面加载后自动获取焦点</li></ul></li><li>checked<ul><li>默认选中，布尔类型</li><li>只针对type=radio / checkbox</li></ul></li><li>disabled<ul><li>禁用，布尔类型</li></ul></li><li>form<ul><li>值为form的id</li><li>规定输入框所属的哪个表单</li></ul></li><li>formaction<ul><li>值为url</li><li>规定表单提交时处理输入控件的文件的 URL</li><li>只针对type=submit / image</li></ul></li><li>formenctype<ul><li>属性规定当表单数据提交到服务器时如何编码</li><li>值和enctype一样</li><li>只针对type=submit / image</li></ul></li><li>formmethod<ul><li>定义发送表单数据到action URL的HTTP方法(get / post)</li><li>只针对type=submit / image</li></ul></li><li>formnovalidate<ul><li>布尔类型</li><li>对输入框不进行验证，如果form设置过novalidate，则覆盖</li></ul></li><li>formtarget<ul><li>规定表示提交表单后在哪里显示接收到响应的名称或关键词</li><li>值和target一样</li><li>只针对type=submit / image</li></ul></li><li>height<ul><li>规定高度</li><li>只针对type=image</li></ul></li><li>list<ul><li>值为datalist标签的id</li><li>datalist预定义了输入框的值</li></ul></li><li>max<ul><li>规定了输入框的最大值</li><li>type为number时为整数</li><li>type=date时是格式化日期</li><li>…</li></ul></li><li>maxlength<ul><li>规定了输入框的最大字符数</li></ul></li><li>min<ul><li>规定了输入框的最小值</li><li>其他和max类似</li></ul></li><li>multiple<ul><li>布尔类型</li><li>定允许用户输入到input多个值</li><li>一般是上传多个文件</li></ul></li><li>name<ul><li>规定input元素的名称</li><li>与后台的获取参数有关</li></ul></li><li>pattern<ul><li>用于验证input元素的值的正则表达式</li><li>值为正则表达式</li></ul></li><li>placeholder<ul><li>字段预期值的简短的提示信息</li></ul></li><li>readonly<ul><li>规定输入字段是只读的</li></ul></li><li>required<ul><li>规定必须填写输入字段</li></ul></li><li>size<ul><li>规定以字符数计的input元素的宽度</li><li>值为整数</li></ul></li><li>src<ul><li>规定显示为提交按钮的图像的 URL</li><li>只针对type=image</li></ul></li><li>step<ul><li>规定数字的合法间隔(例如step=3 // 1 4 7)</li></ul></li><li>value<ul><li>指定input的内容</li></ul></li><li>width<ul><li>规定input元素的宽度</li><li>只针对type=image</li></ul></li></ol><h3 id="15-3-textarea"><a href="#15-3-textarea" class="headerlink" title="15.3. textarea"></a>15.3. textarea</h3><ol><li>autofocus</li><li>cols<ul><li>文本区域内可见的宽度</li></ul></li><li>disabled</li><li>form</li><li>maxlength</li><li>name</li><li>placeholder</li><li>readOnly</li><li>required</li><li>rows<ul><li>文本区域内可见的行数</li></ul></li><li>wrap<ul><li>规定当提交表单时，文本区域中的文本应该怎样换行</li><li>可选值<ul><li>hard 在文本到达元素最大宽度的时候，浏览器自动插入换行符(CR+LF) 。在也就是提交表单也提交来换行符。当使用 “hard” 时，需要指定 cols 属性</li><li>soft 默认，在到达元素最大宽度的时候，换行显示，但不会自动插入换行符，也就是提交表单时没有换行符</li></ul></li></ul></li></ol><h3 id="15-4-label"><a href="#15-4-label" class="headerlink" title="15.4. label"></a>15.4. label</h3><ol><li>for<ul><li>规定label与哪个表单元素绑定</li><li>值为表单元素的id</li></ul></li><li>form</li></ol><h3 id="15-5-select"><a href="#15-5-select" class="headerlink" title="15.5. select"></a>15.5. select</h3><blockquote><p>创建下拉列表</p></blockquote><ol><li>autofocus</li><li>disabled</li><li>form</li><li>multiple<ul><li>布尔类型</li><li>多选</li></ul></li><li>name</li><li>required</li><li>size<ul><li>下拉列表中可见选项的数目</li></ul></li></ol><h3 id="15-6-option"><a href="#15-6-option" class="headerlink" title="15.6. option"></a>15.6. option</h3><ol><li>disabled</li><li>selected<ul><li>默认选中，布尔类型</li></ul></li><li>value<ul><li>送往服务器的选项值</li></ul></li></ol><h3 id="15-7-optgroup"><a href="#15-7-optgroup" class="headerlink" title="15.7. optgroup"></a>15.7. optgroup</h3><blockquote><p>定义选项分组</p></blockquote><ol><li>disabled</li><li>label<ul><li>为选项组规定描述</li></ul></li></ol><h3 id="15-8-button"><a href="#15-8-button" class="headerlink" title="15.8. button"></a>15.8. button</h3><ol><li>type<ul><li>submit</li><li>reset</li><li>button</li></ul></li><li>value<ul><li>按钮的内容</li></ul></li><li>name</li><li>formtarget</li><li>formmethod</li><li>formenctype</li><li>formaction</li><li>form</li><li>disabled</li><li>autofocus</li></ol><h3 id="15-9-datalist"><a href="#15-9-datalist" class="headerlink" title="15.9. datalist"></a>15.9. datalist</h3><blockquote><p>描述一个输入框所预期的值</p></blockquote><h3 id="15-10-output"><a href="#15-10-output" class="headerlink" title="15.10. output"></a>15.10. output</h3><blockquote><p>将计算结果放在output里</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">oninput</span>=<span class="string">&quot;x.value=parseInt(a.value)+parseInt(b.value)&quot;</span>&gt;</span></span><br><span class="line">    0<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> <span class="attr">id</span>=<span class="string">&quot;a&quot;</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span>100</span><br><span class="line">    +<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span> <span class="attr">id</span>=<span class="string">&quot;b&quot;</span> <span class="attr">value</span>=<span class="string">&quot;50&quot;</span>&gt;</span></span><br><span class="line">    =<span class="tag">&lt;<span class="name">output</span> <span class="attr">name</span>=<span class="string">&quot;x&quot;</span> <span class="attr">for</span>=<span class="string">&quot;a b&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">output</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="16-内联框架"><a href="#16-内联框架" class="headerlink" title="16. 内联框架"></a>16. 内联框架</h2><blockquote><p><code>&lt;iframe src=&quot;URL&quot;&gt;&lt;/iframe&gt;</code></p></blockquote><h2 id="17-H5语义标签"><a href="#17-H5语义标签" class="headerlink" title="17. H5语义标签"></a>17. H5语义标签</h2><h3 id="17-1-article"><a href="#17-1-article" class="headerlink" title="17.1. article"></a>17.1. article</h3><ol><li>定义独立的内容</li><li>定义的内容本身必须是有意义的且必须是独立于文档的其余部分<ul><li>论坛帖子</li><li>博客文章</li><li>新闻故事</li><li>评论</li></ul></li></ol><h3 id="17-2-aside"><a href="#17-2-aside" class="headerlink" title="17.2. aside"></a>17.2. aside</h3><ol><li>定义<code>&lt;article&gt;</code>标签外的内容</li><li>aside 的内容应该与附近的内容相关</li></ol><h3 id="17-3-bdi"><a href="#17-3-bdi" class="headerlink" title="17.3. bdi"></a>17.3. bdi</h3><ol><li>标签允许您设置一段文本，使其脱离其父元素的文本方向设置</li></ol><h3 id="17-4-figure-figcaption"><a href="#17-4-figure-figcaption" class="headerlink" title="17.4. figure / figcaption"></a>17.4. figure / figcaption</h3><ol><li>规定独立的流内容（图像、图表、照片、代码等等）</li><li>配合figcaption标签进行对图片进行说明(figcaption位于<code>&lt;figure&gt;</code>元素的第一个或最后一个子元素的位置)</li></ol><h3 id="17-5-footer"><a href="#17-5-footer" class="headerlink" title="17.5. footer"></a>17.5. footer</h3><ol><li>标签定义文档或者文档的一部分区域的页脚</li><li>在典型情况下，该元素会包含文档创作者的姓名、文档的版权信息、使用条款的链接、联系信息等等</li></ol><h3 id="17-6-header"><a href="#17-6-header" class="headerlink" title="17.6. header"></a>17.6. header</h3><ol><li>定义文档或者文档的一部分区域的页眉</li><li>应该作为介绍内容或者导航链接栏的容器</li><li><code>&lt;header&gt;</code> 标签不能被放在 <code>&lt;footer&gt;</code>、<code>&lt;address&gt;</code> 或者另一个 <code>&lt;header&gt;</code> 元素内部</li></ol><h3 id="17-7-mark"><a href="#17-7-mark" class="headerlink" title="17.7. mark"></a>17.7. mark</h3><ol><li>定义带记号的文本</li></ol><h3 id="17-8-meter"><a href="#17-8-meter" class="headerlink" title="17.8. meter"></a>17.8. meter</h3><blockquote><p>定义度量衡，仅用于已知最大和最小值的度量,比如：磁盘使用情况，查询结果的相关性等</p></blockquote><ol><li>form<ul><li>规定 <code>&lt;meter&gt;</code> 元素所属的一个或多个表单</li></ul></li><li>high<ul><li>规定被界定为高的值的范围</li></ul></li><li>low<ul><li>规定被界定为低的值的范围</li></ul></li><li>max<ul><li>规定范围的最大值</li></ul></li><li>min<ul><li>规定范围的最小值</li></ul></li><li>value<ul><li>规定度量的当前值(必需)</li></ul></li><li>optimum<ul><li>规定当前度量的最优值</li></ul></li></ol><h3 id="17-9-nav"><a href="#17-9-nav" class="headerlink" title="17.9. nav"></a>17.9. nav</h3><ol><li>定义导航链接的部分</li></ol><h3 id="17-10-progress"><a href="#17-10-progress" class="headerlink" title="17.10. progress"></a>17.10. progress</h3><blockquote><p>进度条</p></blockquote><ol><li>max<ul><li>规定需要完成的值</li></ul></li><li>value<ul><li>当前进度的当前值</li></ul></li></ol><h3 id="17-11-ruby-rt-rp"><a href="#17-11-ruby-rt-rp" class="headerlink" title="17.11. ruby / rt / rp"></a>17.11. ruby / rt / rp</h3><ol><li><code>&lt;ruby&gt;</code> 标签定义 ruby 注释（中文注音或字符）</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ruby</span>&gt;</span></span><br><span class="line">  汉 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>Han<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line">  字 <span class="tag">&lt;<span class="name">rp</span>&gt;</span>(<span class="tag">&lt;/<span class="name">rp</span>&gt;</span><span class="tag">&lt;<span class="name">rt</span>&gt;</span>zi<span class="tag">&lt;/<span class="name">rt</span>&gt;</span><span class="tag">&lt;<span class="name">rp</span>&gt;</span>)<span class="tag">&lt;/<span class="name">rp</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ruby</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="17-12-section"><a href="#17-12-section" class="headerlink" title="17.12. section"></a>17.12. section</h3><ol><li>定义了文档的某个区域，比如章节、头部、底部或者文档的其他区域</li></ol><h3 id="17-13-time"><a href="#17-13-time" class="headerlink" title="17.13. time"></a>17.13. time</h3><blockquote><p>定义公历的时间（24 小时制）或日期，时间和时区偏移是可选的</p></blockquote><ol><li>datetime<ul><li>规定日期/时间</li></ul></li></ol><h2 id="18-Canvas"><a href="#18-Canvas" class="headerlink" title="18. Canvas"></a>18. Canvas</h2><ol><li>定义图形，比如图表和其他图像</li></ol><h2 id="19-内联SVG"><a href="#19-内联SVG" class="headerlink" title="19. 内联SVG"></a>19. 内联SVG</h2><ol><li>SVG 指可伸缩矢量图形</li><li>SVG 用于定义用于网络的基于矢量的图形</li><li>SVG 使用 XML 格式定义图形</li><li>SVG 图像在放大或改变尺寸的情况下其图形质量不会有损失</li><li>SVG 是万维网联盟的标准</li></ol><h2 id="20-SVG与Canvas两者间的区别"><a href="#20-SVG与Canvas两者间的区别" class="headerlink" title="20. SVG与Canvas两者间的区别"></a>20. SVG与Canvas两者间的区别</h2><ol><li>SVG是一种使用XML描述2D图形的语言</li><li>Canvas通过JavaScript来绘制2D图形</li><li>SVG基于XML，这意味着SVG DOM中的每个元素都是可用的，您可以为某个元素附加JavaScript事件处理器</li><li>在SVG中，每个被绘制的图形均被视为对象，如果SVG对象的属性发生变化，那么浏览器能够自动重现图形</li><li>Canvas是逐像素进行渲染的，在canvas中，一旦图形被绘制完成，它就不会继续得到浏览器的关注，如果其位置发生变化，那么整个场景也需要重新绘制，包括任何或许已被图形覆盖的对象</li></ol><h2 id="21-拖放"><a href="#21-拖放" class="headerlink" title="21. 拖放"></a>21. 拖放</h2><ol><li>设置元素可以拖动(<code>&lt;img draggable=&quot;true&quot;&gt;</code>)</li><li>被拖动元素绑定ondragstart事件(<code>&lt;img draggable=&quot;true&quot; ondragstart=dragstart()&gt;</code>)</li><li>包含内容绑定ondrop事件和ondragover事件，ondragover事件阻止浏览器默认行为，ondrop事件实现将元素移动到该容器下</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">            #div1&#123;</span><br><span class="line"><span class="css">                <span class="attribute">width</span>:<span class="number">350px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">height</span>:<span class="number">70px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">padding</span>:<span class="number">10px</span>;</span></span><br><span class="line"><span class="css">                <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#aaaaaa</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">dragover</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line">                e.preventDefault();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">drop</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line">                e.preventDefault();</span><br><span class="line"><span class="javascript">                <span class="keyword">let</span> id = e.dataTransfer.getData(<span class="string">&quot;drag&quot;</span>); <span class="comment">// id = drag</span></span></span><br><span class="line"><span class="javascript">                e.target.appendChild(<span class="built_in">document</span>.getElementById(id))</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">dragstart</span>(<span class="params">e</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 将id存入</span></span></span><br><span class="line"><span class="javascript">                e.dataTransfer.setData(<span class="string">&quot;drag&quot;</span>, e.target.id);</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;div1&quot;</span> <span class="attr">ondrop</span>=<span class="string">&quot;drop(event)&quot;</span> <span class="attr">ondragover</span>=<span class="string">&quot;dragover(event)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">id</span>=<span class="string">&quot;drag&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/images/logo.png&quot;</span> <span class="attr">draggable</span>=<span class="string">&quot;true&quot;</span> <span class="attr">ondragstart</span>=<span class="string">&quot;dragstart(event)&quot;</span> <span class="attr">width</span>=<span class="string">&quot;336&quot;</span> <span class="attr">height</span>=<span class="string">&quot;69&quot;</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="22-地理定位"><a href="#22-地理定位" class="headerlink" title="22. 地理定位"></a>22. 地理定位</h2><ol><li>navigator.geolocation.getCurrentPosition(callback1 [, callback2])</li><li>callback1，一个获取成功的回调自动注入position参数，包含位置信息</li><li>callback2，一个获取失败的回调自动注入error信息</li></ol><h2 id="23-视频资源"><a href="#23-视频资源" class="headerlink" title="23. 视频资源"></a>23. 视频资源</h2><blockquote><p><code>&lt;video width=&quot;320&quot; height=&quot;240&quot; controls&gt;&lt;source src=&quot;movie.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/video&gt;</code></p></blockquote><ol><li>autoplay<ul><li>自动播放</li><li>布尔属性</li></ul></li><li>controls<ul><li>布尔属性</li><li>向用户显示控件，比如播放按钮</li></ul></li><li>height<ul><li>高度</li></ul></li><li>loop<ul><li>布尔类型</li><li>循环播放</li></ul></li><li>muted<ul><li>静音</li><li>布尔类型</li></ul></li><li>poster<ul><li>规定视频正在下载时显示的图像，直到用户点击播放按钮</li></ul></li><li>preload（视频在页面加载时进行加载，并预备播放）<ul><li>auto</li><li>metadata</li><li>none</li></ul></li><li>src<ul><li>播放的视频的 URL</li></ul></li><li>width(高度)</li></ol><h2 id="24-source"><a href="#24-source" class="headerlink" title="24. source"></a>24. source</h2><ol><li>src<ul><li>规定媒体文件的URL</li></ul></li><li>type<ul><li>规定媒体资源的MIME类型</li></ul></li></ol><h2 id="25-音频"><a href="#25-音频" class="headerlink" title="25. 音频"></a>25. 音频</h2><blockquote><p><code>audio</code></p></blockquote><ol><li>autoplay</li><li>controls</li><li>loop</li><li>muted</li><li>preload</li><li>src</li></ol><h2 id="26-Web存储"><a href="#26-Web存储" class="headerlink" title="26. Web存储"></a>26. Web存储</h2><blockquote><p>localStorage和sessionStorage</p></blockquote><ol><li>localStorage(本地存储)<ul><li>localStorage.setItem(key,value); // 保存数据</li><li>localStorage.getItem(key); // 获取key对应的value</li><li>localStorage.removeItem(key); //删除key对应的这条数据</li><li>localStorage.clear(); // 清除该站点本地存储</li></ul></li><li>sessionStorage(会话存储)</li><li>作用域<ul><li>localStorage要求在同一个协议，主机名，端口，就可以读取同一份本地存储数据</li><li>sessionStorage要求在同一个协议，主机名，端口还要同一个窗口下才可以读取同一份本地存储数据</li></ul></li></ol><p><img src="img/scope.png" alt="image"></p><h2 id="27-Web-SQL数据库"><a href="#27-Web-SQL数据库" class="headerlink" title="27. Web SQL数据库"></a>27. Web SQL数据库</h2><h3 id="27-1-核心方法"><a href="#27-1-核心方法" class="headerlink" title="27.1. 核心方法"></a>27.1. 核心方法</h3><ol><li>openDatabase(); // 打开一个数据库，如果没有新建一个</li><li>transaction(); // 这个方法让我们能够控制一个事务，以及基于这种情况执行提交或者回滚</li><li>executeSql(); // 执行sql</li></ol><h3 id="27-2-openDatabase参数"><a href="#27-2-openDatabase参数" class="headerlink" title="27.2. openDatabase参数"></a>27.2. openDatabase参数</h3><ol><li><code>openDatabase(数据库名称, 版本, 描述, 大小, 回调(在创建数据库后调用))</code></li><li>返回一个数据库对象</li></ol><h3 id="27-3-transaction-callback-db-transaction-obj-gt-obj-executeSql-“select-from-db”"><a href="#27-3-transaction-callback-db-transaction-obj-gt-obj-executeSql-“select-from-db”" class="headerlink" title="27.3. transaction(callback);   (db.transaction((obj) =&gt; {obj.executeSql(“select * from db”)})"></a>27.3. transaction(callback);   (db.transaction((obj) =&gt; {obj.executeSql(“select * from db”)})</h3><ol><li>参数回调，回调内的语句组成一组事务，注入参数预编译对象</li></ol><h3 id="27-4-executeSql-sql-array-callback"><a href="#27-4-executeSql-sql-array-callback" class="headerlink" title="27.4. executeSql(sql, array, callback)"></a>27.4. executeSql(sql, array, callback)</h3><ol><li>sql语句和回调</li><li>sql语句可以使用?，在第二参数中使用数组传入</li><li>callback回调，注入预编译对象和结果集</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> db = openDatabase(<span class="string">&quot;db&quot;</span>, <span class="number">1.0</span>, <span class="string">&quot;mydb&quot;</span>, <span class="number">2</span> * <span class="number">1024</span> * <span class="number">1024</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;mydb success&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">db.transaction(<span class="function">(<span class="params">statement</span>) =&gt;</span> &#123;</span><br><span class="line">    statement.executeSql(<span class="string">&quot;CREATE TABLE IF NOT EXISTS LOGS (id unique, log)&quot;</span>);</span><br><span class="line">    statement.executeSql(<span class="string">&quot;insert into LOGS values(1, &#x27;xxx&#x27;)&quot;</span>);</span><br><span class="line">    statement.executeSql(<span class="string">&quot;insert into LOGS values(?, ?)&quot;</span>, [<span class="number">1</span>, <span class="string">&#x27;yyy&#x27;</span>]);</span><br><span class="line">    statement.executeSql(<span class="string">&quot;select * from LOGS&quot;</span>, <span class="function">(<span class="params">statement, results</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; results.rows.length; i++)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(results.rows.item(i).id, results.rows.item(i).log);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="28-应用程序缓存"><a href="#28-应用程序缓存" class="headerlink" title="28. 应用程序缓存"></a>28. 应用程序缓存</h2><blockquote><p>HTML5引入了应用程序缓存，这意味着 web 应用可进行缓存，并可在没有因特网连接时进行访问</p></blockquote><h3 id="28-1-应用程序缓存优势"><a href="#28-1-应用程序缓存优势" class="headerlink" title="28.1. 应用程序缓存优势"></a>28.1. 应用程序缓存优势</h3><ol><li>离线浏览</li><li>速度</li><li>减少服务器压力</li></ol><h2 id="29-Web-Worker"><a href="#29-Web-Worker" class="headerlink" title="29. Web Worker"></a>29. Web Worker</h2><ol><li>web worker 是运行在后台的 JavaScript，独立于其他脚本，不会影响页面的性能</li><li>创建worker(new Worker(“js_url”);)</li><li>终止worker(w.terminate();)</li></ol><h2 id="30-Web-Socket"><a href="#30-Web-Socket" class="headerlink" title="30. Web Socket"></a>30. Web Socket</h2><ol><li>Socket.send() // 使用连接发送数据</li><li>Socket.close() // 关闭连接</li><li>webSocket事件<ul><li>onopen  连接建立时触发</li><li>onmessage 发送消息时触发</li><li>onerror 出现错误时触发</li><li>onclose 关闭连接时触发</li></ul></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> socket = <span class="keyword">new</span> WebSocket(url);</span><br><span class="line"></span><br><span class="line">socket.onopen = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    socket.send(<span class="string">&quot;send data&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socket.onmessage = <span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;数据已接收&quot;</span> + evt.data);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">socket.onclose = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// xxx</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>== vs === vs Object.is()</title>
      <link href="2021/04/10/vs-vs-Object-is/"/>
      <url>2021/04/10/vs-vs-Object-is/</url>
      
        <content type="html"><![CDATA[<h2 id="值对比取决于2个因素"><a href="#值对比取决于2个因素" class="headerlink" title="值对比取决于2个因素"></a>值对比取决于2个因素</h2><ul><li>  所操作的值</li><li>  值的类型，如 String，Boolean…</li></ul><p>在值对比时还有一个起着重要的作用的机制，那就是值的类型转换。</p><h2 id="什么是类型转换？"><a href="#什么是类型转换？" class="headerlink" title="什么是类型转换？"></a>什么是类型转换？</h2><p>&emsp;&emsp;JavaScript 作为一个弱类型语言，有时候值会从一个类型转换成其他类型，这个称之为隐式转换或强制转换，这些在我们使用运算符（<code>==</code>）时会导致一些错误发生。</p><h2 id="比较运算符的种类"><a href="#比较运算符的种类" class="headerlink" title="比较运算符的种类"></a>比较运算符的种类</h2><p>JavaScript 提供了3种比较运算符：</p><ul><li>  <code>==</code></li><li>  <code>===</code></li><li>  <code>Object.is()</code></li></ul><h3 id="（非严格相等）"><a href="#（非严格相等）" class="headerlink" title="==（非严格相等）"></a><code>==</code>（非严格相等）</h3><ul><li>其被称为<strong>相等操作符</strong>，只会对比两个值是否相等，相等则会返回 true</li><li>在这种情况下，如果对比的值类型不同，则会自动将值隐式转换成一种常见的类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> == <span class="string">&#x27;1&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> == <span class="string">&#x27;true&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="string">&#x27;NaN&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="literal">NaN</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(-<span class="number">0</span> == <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> == <span class="string">&#x27;0&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> == <span class="string">&#x27;1&#x27;</span>) <span class="comment">// true 将 true转为1 &#x27;1&#x27;转为1</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125; == &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> == <span class="literal">true</span>); <span class="comment">// false Number(undefined)是NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(undefinde == <span class="literal">false</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> == <span class="literal">true</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> == <span class="literal">false</span>); <span class="comment">// false typeof null是&#x27;object&#x27; 但是null没有 toString和valueOf方法 这是一个特殊的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;</span><br><span class="line"><span class="keyword">const</span> b = a</span><br><span class="line"><span class="built_in">console</span>.log(a == b) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([] == <span class="number">0</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125; == <span class="number">0</span>); <span class="comment">// false &#123;&#125;.toString()是一个默认的字符串 [Object Object] NaN不和任何值相等</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">1</span>&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">0</span>&#125;&#125; == <span class="number">1</span>);</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> []&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">100</span>&#125;&#125; == <span class="number">100</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p><strong>使用<code>==</code>总结</strong></p><ul><li><code>NaN</code> 不和任何值相等，包括它自己</li><li>-0 与 0 相等</li><li><code>null</code> == <code>null</code> 和 <code>undefined</code>相等</li><li>布尔类型和字符串 == 比较时将它们转为number类型再进行 == 比较，并且对于其他不同基本数据类型的 == 比较都是将基本数据类型转为number类型进行比较，但是null和基本数据类型的比较作对象处理</li><li>操作只可以自动转换为 String、Boolean、Number</li><li>String 类型比较区分大小写</li><li>两个操作值如果引用同一个对象，返回 true，否则 false</li><li>对于如果两个操作数中其中一个是复杂数据类型，那么会先获取对象的原始值进行比较，复杂数据类型的原始值的获取是调用valueOf，如果是基本数据类型就进行比较，如果不是就再调用toString方法，然后进行基本数据类型的比较。例如：<code>[] == 0</code>这个表达式的值是true，[].valueOf()转化为一个[]，再调用toString()转换为空串，在转为Number数据类型，所以返回true</li><li>记住 6 个虚值（null，undefined，’’，0，NaN，false）</li></ul><h3 id="（严格相等）"><a href="#（严格相等）" class="headerlink" title="=== （严格相等）"></a><code>===</code> （严格相等）</h3><ul><li>  它被称为 <strong>全等操作符</strong>，和 <code>==</code> 很相似，区别在于 <code>===</code> 不执行隐式转换</li><li>  当两个操作值的值和类型都相等的情况下，才会返回 true</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> === <span class="string">&#x27;1&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> === <span class="string">&#x27;true&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> === <span class="literal">true</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> === <span class="literal">NaN</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> === <span class="literal">null</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;ara&#x27;</span> == <span class="string">&#x27;Ara&#x27;</span>) <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(-<span class="number">0</span> === <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> === <span class="literal">undefined</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125; === &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p><strong>使用<code>===</code>总结</strong></p><ul><li>  <code>NaN</code> 不等于包含它在内的任何东西</li><li>  -0 等于 0</li><li>  null 等于 null，但不等于 undefined</li><li>  String 严格区分大小写</li><li>  两个操作值如果引用同一个对象，返回 true，否则 false</li></ul><h3 id="Object-is"><a href="#Object-is" class="headerlink" title="Object.is()"></a>Object.is()</h3><ul><li>  其被称为 <strong>同值相等</strong>，是比较运算符中的一份子</li><li>  在检查两个操作值是否相等时，用到了以下规则</li></ul><h4 id="规则1：操作值均未被定义（undefined）"><a href="#规则1：操作值均未被定义（undefined）" class="headerlink" title="规则1：操作值均未被定义（undefined）"></a>规则1：操作值均未被定义（<code>undefined</code>）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a</span><br><span class="line"><span class="keyword">let</span> b</span><br><span class="line"><span class="built_in">Object</span>.is(a, b) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="规则2：操作都是相同长度和顺序的字符串"><a href="#规则2：操作都是相同长度和顺序的字符串" class="headerlink" title="规则2：操作都是相同长度和顺序的字符串"></a>规则2：操作都是相同长度和顺序的字符串</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="string">&#x27;abcdefg&#x27;</span>, <span class="string">&#x27;abcdefg&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="string">&#x27;abcdefg&#x27;</span>, <span class="string">&#x27;ABCDEFG&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则3：操作值都是-null"><a href="#规则3：操作值都是-null" class="headerlink" title="规则3：操作值都是 null"></a>规则3：操作值都是 null</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="literal">null</span>, <span class="literal">null</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="literal">null</span>, <span class="string">&#x27;null&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则4：操作值为对象且引用地址相同"><a href="#规则4：操作值为对象且引用地址相同" class="headerlink" title="规则4：操作值为对象且引用地址相同"></a>规则4：操作值为对象且引用地址相同</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;</span><br><span class="line"><span class="keyword">let</span> b = a</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.is(a, b) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;, &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="built_in">window</span>, <span class="built_in">window</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="规则5：操作值均非0和非NaN"><a href="#规则5：操作值均非0和非NaN" class="headerlink" title="规则5：操作值均非0和非NaN"></a>规则5：操作值均非0和非NaN</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="number">1</span>, <span class="number">1</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则6：操作值都是-0-或-0"><a href="#规则6：操作值都是-0-或-0" class="headerlink" title="规则6：操作值都是 +0 或 -0"></a>规则6：操作值都是 +0 或 -0</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="number">0</span>, -<span class="number">0</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则7：操作值为-NaN"><a href="#规则7：操作值为-NaN" class="headerlink" title="规则7：操作值为 NaN"></a>规则7：操作值为 <code>NaN</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="literal">NaN</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="number">0</span>/<span class="number">0</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="polyfill"><a href="#polyfill" class="headerlink" title="polyfill"></a>polyfill</h2><blockquote><p>  Object.is() 不支持 IE，因此使用 polyfill 代替</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="built_in">Object</span>.is) &#123;</span><br><span class="line">  <span class="built_in">Object</span>.is = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a === b) &#123;</span><br><span class="line"><span class="comment">// Object.is(0, -0); false 考虑是0的情况Infinity !== -Infinity</span></span><br><span class="line">      <span class="keyword">return</span> a !== <span class="number">0</span> || <span class="number">1</span>/a === <span class="number">1</span>/b</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 考虑两个值是NaN的情况</span></span><br><span class="line">      <span class="keyword">return</span> a !== a &amp;&amp; b !== b</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>console.log(null == false) <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">false</span></span><br>console.log(null == true) <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click  </button><span class="hide-content">false</span></span></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>小练习</span></div>    <div class="hide-content"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> &#123;&#125;&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> -<span class="number">1</span>&#125;&#125; == -<span class="number">1</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div></div><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看答案    </button><div class="hide-content"><p>傻子，怎麼可能有答案</p></div></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">我的世界</button></li><li class="tab"><button type="button" data-href="#test1-2">我的代码</button></li><li class="tab"><button type="button" data-href="#test1-3">我的什么</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><iframe id="cp_embed_poRpONK" src="//codepen.io/milkdue/embed/poRpONK?height=300&theme-id=dark&slug-hash=poRpONK&default-tab=html,result" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
