<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>bufferfly主题的应用和即时推送</title>
      <link href="2021/04/13/bufferfly%E4%B8%BB%E9%A2%98%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E5%8D%B3%E6%97%B6%E6%8E%A8%E9%80%81/"/>
      <url>2021/04/13/bufferfly%E4%B8%BB%E9%A2%98%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E5%8D%B3%E6%97%B6%E6%8E%A8%E9%80%81/</url>
      
        <content type="html"><![CDATA[<h2 id="关于bufferfly的安装"><a href="#关于bufferfly的安装" class="headerlink" title="关于bufferfly的安装"></a>关于bufferfly的安装</h2><ul><li>请查看以下官方文档</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://butterfly.js.org/posts/21cfbf15/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="valine的应用"><a href="#valine的应用" class="headerlink" title="valine的应用"></a>valine的应用</h2><h3 id="遵循valine的指示配置你的LeanCloud"><a href="#遵循valine的指示配置你的LeanCloud" class="headerlink" title="遵循valine的指示配置你的LeanCloud"></a>遵循valine的指示配置你的LeanCloud</h3><ul><li><code>bufferfly</code> 中使用 <code>valine</code> 在上方文档中，有所提及，下方文档是关于如果配置 <code>leanCloud</code> 的文档</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://valine.js.org/quickstart.html' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h3 id="评论的邮件提醒"><a href="#评论的邮件提醒" class="headerlink" title="评论的邮件提醒"></a>评论的邮件提醒</h3><ul><li><code>bufferfly</code> 应用 <code>valine</code> 的评论系统上方官方文档有所提及，关于开启邮件提醒</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://github.com/zhaojun1998/Valine-Admin' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="twikoo的应用"><a href="#twikoo的应用" class="headerlink" title="twikoo的应用"></a>twikoo的应用</h2><ul><li><code>bufferfly</code> 支持双评论系统，只需要按照文档中的指示去配置自己的评论系统即可</li><li><code>Twikoo</code> 是一个简洁、安全、无后端的静态网站评论系统，基于<a href="https://cloud.tencent.com/act/pro/cloudbase01?fromSource=gwzcw.3814800.3814800.3814800&utm_medium=cps&utm_id=gwzcw.3814800.3814800.3814800&cps_key=44b3b34da3e3b77bae971b11ed4b2639">腾讯云开发</a></li><li>关于如何配置twikoo评论系统，请参考官方文档，并按照bufferfly的指示配置自己的环境id</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://twikoo.js.org/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="server酱和邮件的推送服务"><a href="#server酱和邮件的推送服务" class="headerlink" title="server酱和邮件的推送服务"></a>server酱和邮件的推送服务</h2><ol><li>点击twikoo设置按钮</li><li>微信提醒需要设置SC_SENDKEY(请在server酱中获取，只支持博主提醒)</li><li>邮件(QQ邮箱)提醒按照下方配置设置</li></ol><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>邮件提醒</span></div>    <div class="hide-content"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;SENDER_EMAIL&#x27;: &#x27;xxxx.@qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_SERVICE&#x27;: &#x27;QQ&#x27;,</span><br><span class="line">    &#x27;SMTP_HOST&#x27;: &#x27;smtp.qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_SECURE&#x27;: true,</span><br><span class="line">    &#x27;SMTP_USER&#x27;: &#x27;xxxx.@qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_PASS&#x27;: &#x27;QQ邮箱授权码，开启smtp&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="btns rounded center grid5">            <a class="button" href='http://sc.ftqq.com/9.version' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="关于哔哔点啥"><a href="#关于哔哔点啥" class="headerlink" title="关于哔哔点啥"></a>关于哔哔点啥</h2><ol><li>对于哔哔点啥可参考<a href="https://immmmm.com/">木木</a>的文档自行配置，更多样式配置请参考</li></ol><div class="tag link"><a class="link-card" title="给bber换个皮肤" href="https://www.antmoe.com/posts/7ec820ee/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://7.dusays.com/2021/03/24/8a39889ea730e.png"/></div><div class="right"><p class="text">给bber换个皮肤</p><p class="url">https://www.antmoe.com/posts/7ec820ee/</p></div></a></div><div class="btns rounded center grid5">            <a class="button" href='https://immmmm.com/bb-by-wechat-pro/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+jsDelivr搭建自己的免费CDN</title>
      <link href="2021/04/11/Github-jsDelivr%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%8D%E8%B4%B9CDN/"/>
      <url>2021/04/11/Github-jsDelivr%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%85%8D%E8%B4%B9CDN/</url>
      
        <content type="html"><![CDATA[<ul><li>新建一个github仓库，命名为cdn</li><li>关联仓库，将文件push上去</li></ul><p><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.1/blog/cdn/1.png" alt="release"></p><ul><li>填写tag version版本号</li><li>jsDeliver的引用</li></ul><div class="hide-toggle" style="border: 1px solid #FF7242"><div class="hide-button toggle-title" style="background-color: #FF7242;color: #fff"><i class="fas fa-caret-right fa-fw"></i><span>jsDeliver的引用</span></div>    <div class="hide-content"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径</span><br><span class="line"></span><br><span class="line"># 例如</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;milkdue&#x2F;cdn@1.1&#x2F;img&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure></div></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="">小提示  </button><span class="hide-content">新上传文件后需要发布新版本Draft a new release</span></span>]]></content>
      
      
      <categories>
          
          <category> CDN </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CDN </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>== vs === vs Object.is()</title>
      <link href="2021/04/10/vs-vs-Object-is/"/>
      <url>2021/04/10/vs-vs-Object-is/</url>
      
        <content type="html"><![CDATA[<h2 id="值对比取决于2个因素"><a href="#值对比取决于2个因素" class="headerlink" title="值对比取决于2个因素"></a>值对比取决于2个因素</h2><ul><li>  所操作的值</li><li>  值的类型，如 String，Boolean…</li></ul><p>在值对比时还有一个起着重要的作用的机制，那就是值的类型转换。</p><h2 id="什么是类型转换？"><a href="#什么是类型转换？" class="headerlink" title="什么是类型转换？"></a>什么是类型转换？</h2><p>&emsp;&emsp;JavaScript 作为一个弱类型语言，有时候值会从一个类型转换成其他类型，这个称之为隐式转换或强制转换，这些在我们使用运算符（<code>==</code>）时会导致一些错误发生。</p><h2 id="比较运算符的种类"><a href="#比较运算符的种类" class="headerlink" title="比较运算符的种类"></a>比较运算符的种类</h2><p>JavaScript 提供了3种比较运算符：</p><ul><li>  <code>==</code></li><li>  <code>===</code></li><li>  <code>Object.is()</code></li></ul><h3 id="（非严格相等）"><a href="#（非严格相等）" class="headerlink" title="==（非严格相等）"></a><code>==</code>（非严格相等）</h3><ul><li>其被称为<strong>相等操作符</strong>，只会对比两个值是否相等，相等则会返回 true</li><li>在这种情况下，如果对比的值类型不同，则会自动将值隐式转换成一种常见的类型</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> == <span class="string">&#x27;1&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> == <span class="string">&#x27;true&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="string">&#x27;NaN&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="literal">NaN</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(-<span class="number">0</span> == <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span> == <span class="string">&#x27;0&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> == <span class="string">&#x27;1&#x27;</span>) <span class="comment">// true 将 true转为1 &#x27;1&#x27;转为1</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125; == &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">undefined</span> == <span class="literal">true</span>); <span class="comment">// false Number(undefined)是NaN</span></span><br><span class="line"><span class="built_in">console</span>.log(undefinde == <span class="literal">false</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> == <span class="literal">true</span>); <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> == <span class="literal">false</span>); <span class="comment">// false typeof null是&#x27;object&#x27; 但是null没有 toString和valueOf方法 这是一个特殊的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> a = &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;</span><br><span class="line"><span class="keyword">const</span> b = a</span><br><span class="line"><span class="built_in">console</span>.log(a == b) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log([] == <span class="number">0</span>); <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;&#125; == <span class="number">0</span>); <span class="comment">// false &#123;&#125;.toString()是一个默认的字符串 [Object Object] NaN不和任何值相等</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">1</span>&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">0</span>&#125;&#125; == <span class="number">1</span>);</span><br><span class="line"><span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> []&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="number">100</span>&#125;&#125; == <span class="number">100</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure><p><strong>使用<code>==</code>总结</strong></p><ul><li><code>NaN</code> 不和任何值相等，包括它自己</li><li>-0 与 0 相等</li><li><code>null</code> == <code>null</code> 和 <code>undefined</code>相等</li><li>布尔类型和字符串 == 比较时将它们转为number类型再进行 == 比较，并且对于其他不同基本数据类型的 == 比较都是将基本数据类型转为number类型进行比较，但是null和基本数据类型的比较作对象处理</li><li>操作只可以自动转换为 String、Boolean、Number</li><li>String 类型比较区分大小写</li><li>两个操作值如果引用同一个对象，返回 true，否则 false</li><li>对于如果两个操作数中其中一个是复杂数据类型，那么会先获取对象的原始值进行比较，复杂数据类型的原始值的获取是调用valueOf，如果是基本数据类型就进行比较，如果不是就再调用toString方法，然后进行基本数据类型的比较。例如：<code>[] == 0</code>这个表达式的值是true，[].valueOf()转化为一个[]，再调用toString()转换为空串，在转为Number数据类型，所以返回true</li><li>记住 6 个虚值（null，undefined，’’，0，NaN，false）</li></ul><h3 id="（严格相等）"><a href="#（严格相等）" class="headerlink" title="=== （严格相等）"></a><code>===</code> （严格相等）</h3><ul><li>  它被称为 <strong>全等操作符</strong>，和 <code>==</code> 很相似，区别在于 <code>===</code> 不执行隐式转换</li><li>  当两个操作值的值和类型都相等的情况下，才会返回 true</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">1</span> === <span class="string">&#x27;1&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> === <span class="string">&#x27;true&#x27;</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">true</span> === <span class="literal">true</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> === <span class="literal">NaN</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> === <span class="literal">null</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&#x27;ara&#x27;</span> == <span class="string">&#x27;Ara&#x27;</span>) <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(-<span class="number">0</span> === <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">null</span> === <span class="literal">undefined</span>) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">console</span>.log(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125; === &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><p><strong>使用<code>===</code>总结</strong></p><ul><li>  <code>NaN</code> 不等于包含它在内的任何东西</li><li>  -0 等于 0</li><li>  null 等于 null，但不等于 undefined</li><li>  String 严格区分大小写</li><li>  两个操作值如果引用同一个对象，返回 true，否则 false</li></ul><h3 id="Object-is"><a href="#Object-is" class="headerlink" title="Object.is()"></a>Object.is()</h3><ul><li>  其被称为 <strong>同值相等</strong>，是比较运算符中的一份子</li><li>  在检查两个操作值是否相等时，用到了以下规则</li></ul><h4 id="规则1：操作值均未被定义（undefined）"><a href="#规则1：操作值均未被定义（undefined）" class="headerlink" title="规则1：操作值均未被定义（undefined）"></a>规则1：操作值均未被定义（<code>undefined</code>）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a</span><br><span class="line"><span class="keyword">let</span> b</span><br><span class="line"><span class="built_in">Object</span>.is(a, b) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="规则2：操作都是相同长度和顺序的字符串"><a href="#规则2：操作都是相同长度和顺序的字符串" class="headerlink" title="规则2：操作都是相同长度和顺序的字符串"></a>规则2：操作都是相同长度和顺序的字符串</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="string">&#x27;abcdefg&#x27;</span>, <span class="string">&#x27;abcdefg&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="string">&#x27;abcdefg&#x27;</span>, <span class="string">&#x27;ABCDEFG&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则3：操作值都是-null"><a href="#规则3：操作值都是-null" class="headerlink" title="规则3：操作值都是 null"></a>规则3：操作值都是 null</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="literal">null</span>, <span class="literal">null</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="literal">null</span>, <span class="string">&#x27;null&#x27;</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则4：操作值为对象且引用地址相同"><a href="#规则4：操作值为对象且引用地址相同" class="headerlink" title="规则4：操作值为对象且引用地址相同"></a>规则4：操作值为对象且引用地址相同</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;</span><br><span class="line"><span class="keyword">let</span> b = a</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.is(a, b) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(&#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;, &#123; <span class="attr">name</span>: <span class="string">&quot;Tom&quot;</span> &#125;) <span class="comment">// false</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="built_in">window</span>, <span class="built_in">window</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h4 id="规则5：操作值均非0和非NaN"><a href="#规则5：操作值均非0和非NaN" class="headerlink" title="规则5：操作值均非0和非NaN"></a>规则5：操作值均非0和非NaN</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="number">1</span>, <span class="number">1</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="number">1</span>, <span class="number">2</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则6：操作值都是-0-或-0"><a href="#规则6：操作值都是-0-或-0" class="headerlink" title="规则6：操作值都是 +0 或 -0"></a>规则6：操作值都是 +0 或 -0</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="number">0</span>, <span class="number">0</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="number">0</span>, -<span class="number">0</span>) <span class="comment">// false</span></span><br></pre></td></tr></table></figure><h4 id="规则7：操作值为-NaN"><a href="#规则7：操作值为-NaN" class="headerlink" title="规则7：操作值为 NaN"></a>规则7：操作值为 <code>NaN</code></h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="literal">NaN</span>) <span class="comment">// true</span></span><br><span class="line"><span class="built_in">Object</span>.is(<span class="literal">NaN</span>, <span class="number">0</span>/<span class="number">0</span>) <span class="comment">// true</span></span><br></pre></td></tr></table></figure><h2 id="polyfill"><a href="#polyfill" class="headerlink" title="polyfill"></a>polyfill</h2><blockquote><p>  Object.is() 不支持 IE，因此使用 polyfill 代替</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="built_in">Object</span>.is) &#123;</span><br><span class="line">  <span class="built_in">Object</span>.is = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a === b) &#123;</span><br><span class="line"><span class="comment">// Object.is(0, -0); false 考虑是0的情况Infinity !== -Infinity</span></span><br><span class="line">      <span class="keyword">return</span> a !== <span class="number">0</span> || <span class="number">1</span>/a === <span class="number">1</span>/b</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">// 考虑两个值是NaN的情况</span></span><br><span class="line">      <span class="keyword">return</span> a !== a &amp;&amp; b !== b</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2><p>console.log(null == false) <span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">false</span></span><br>console.log(null == true) <span class="hide-inline"><button type="button" class="hide-button button--animated" style="">Click  </button><span class="hide-content">false</span></span></p><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>小练习</span></div>    <div class="hide-content"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(&#123;<span class="function"><span class="title">valueOf</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> &#123;&#125;&#125;, <span class="function"><span class="title">toString</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> -<span class="number">1</span>&#125;&#125; == -<span class="number">1</span>); <span class="comment">// true</span></span><br></pre></td></tr></table></figure></div></div><div class="hide-block"><button type="button" class="hide-button button--animated" style="">查看答案    </button><div class="hide-content"><p>傻子，怎麼可能有答案</p></div></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">我的世界</button></li><li class="tab"><button type="button" data-href="#test1-2">我的代码</button></li><li class="tab"><button type="button" data-href="#test1-3">我的什么</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><iframe id="cp_embed_poRpONK" src="//codepen.io/milkdue/embed/poRpONK?height=300&theme-id=dark&slug-hash=poRpONK&default-tab=html,result" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
