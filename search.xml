<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vue</title>
      <link href="c0add594/"/>
      <url>c0add594/</url>
      
        <content type="html"><![CDATA[<h2 id="插值">插值</h2><h3 id="文本插值">文本插值</h3><ol><li>格式<code>&#123;&#123;expression&#125;&#125;</code></li><li>使用<code>v-once</code>指令执行一次插值，后续不再更新</li></ol><iframe id="cp_embed_yLbJKgJ" src="//codepen.io/milkdue/embed/yLbJKgJ?height=300&theme-id=dark&slug-hash=yLbJKgJ&default-tab=js,result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="html插值">html插值</h3><div class="note purple icon flat"><i class="note-icon fa fa-thermometer-full"></i><p>双大括号将数据解释为普通文本而不是html代码，如果需要渲染为html，则需要使用<code>v-html</code>指令</p></div><iframe id="cp_embed_JjNKvMq" src="//codepen.io/milkdue/embed/JjNKvMq?height=300&theme-id=dark&slug-hash=JjNKvMq&default-tab=html,result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h2 id="指令">指令</h2><div class="note green icon flat"><i class="note-icon fa fa-bolt"></i><p>带有<code>v-</code>前缀的特殊的attribute</p></div><h3 id="参数">参数</h3><div class="note blue icon disabled"><i class="note-icon fa fa-tree"></i><p>一些指令能够接收一个参数，在指令名称之后以冒号表示</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:click</span>=<span class="string">&quot;todo&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="动态参数">动态参数</h3><div class="note default icon flat"><i class="note-icon fa fa-bicycle"></i><p>用方括号括起来的js表达式作为指令的参数</p></div><ol><li>动态参数会转换为字符串，异常情况下为null，将会移除绑定</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:</span>[<span class="attr">attributeName</span>]=<span class="string">&quot;url&quot;</span>&gt;</span>跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">v-on:</span>[<span class="attr">eventName</span>]=<span class="string">&quot;todo&quot;</span>&gt;</span>事件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            attributeName: <span class="string">&#x27;href&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            url: <span class="string">&#x27;www.baidu.com&#x27;</span>,</span></span><br><span class="line"><span class="javascript">            eventName: <span class="string">&#x27;click&#x27;</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="计算属性和侦听器">计算属性和侦听器</h2><h3 id="计算属性">计算属性</h3><div class="note pink icon flat"><i class="note-icon fa fa-exclamation"></i><p>对于复杂的逻辑，使用计算属性比在插值逻辑或函数中效率更高</p></div><iframe id="cp_embed_dyWXKaV" src="//codepen.io/milkdue/embed/dyWXKaV?height=300&theme-id=dark&slug-hash=dyWXKaV&default-tab=html,result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><div class="note purple icon flat"><i class="note-icon fa fa-flask"></i><p>计算属性默认只有getter，也可以在定义计算属性的同时指定setter</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">  fullName: &#123;</span><br><span class="line">    <span class="comment">// getter</span></span><br><span class="line">    get: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">this</span>.firstName + <span class="string">&#x27; &#x27;</span> + <span class="built_in">this</span>.lastName</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// setter</span></span><br><span class="line">    set: <span class="function"><span class="keyword">function</span> (<span class="params">newValue</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> names = newValue.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">      <span class="built_in">this</span>.firstName = names[<span class="number">0</span>]</span><br><span class="line">      <span class="built_in">this</span>.lastName = names[names.length - <span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="侦听器">侦听器</h3><div class="note green icon flat"><i class="note-icon fa fa-cogs"></i><p><code>vue</code>通过<code>watch</code>来响应数据的变化，当侦听的数据发生变化时，执行相应的逻辑</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    data: &#123;</span><br><span class="line">        oldMessage: <span class="string">&#x27;message&#x27;</span>,</span><br><span class="line">        message: <span class="string">&#x27;message&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">        <span class="comment">// 侦听oldMessage，发生变化改变message</span></span><br><span class="line">        oldMessage: <span class="function"><span class="keyword">function</span>(<span class="params">newValue, oldValue</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(newValue + <span class="string">&#x27;&#x27;</span> + oldValue);</span><br><span class="line">            <span class="built_in">this</span>.message = newValue + oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">mounted</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> <span class="built_in">this</span>.oldMessage = <span class="string">&#x27;suxi&#x27;</span>, <span class="number">1000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="class和style绑定">class和style绑定</h2><h3 id="绑定class">绑定class</h3><ol><li><p>传入对象，动态切换<code>class</code></p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- isActive为真值时active存在 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;&#123; active: isActive &#125;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;static&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            isActive: <span class="literal">true</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 渲染为下方dom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>传入数组，动态应用数组中的<code>class</code></p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:class</span>=<span class="string">&quot;[&#x27;static&#x27;, &#x27;active&#x27;]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 渲染为下方dom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;static active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>自定义组件，在组件上绑定的类名，将会添加在组件的根元素上面，这个元素上存在的类名不会被覆盖</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-component</span> <span class="attr">class</span>=<span class="string">&quot;baz boo&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">        template: &#x27;<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;foo bar&quot;</span>&gt;</span>Hi<span class="tag">&lt;/<span class="name">p</span>&gt;</span>&#x27;</span></span></span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 渲染为以下dom --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;foo bar baz boo&quot;</span>&gt;</span>Hi<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="绑定style">绑定style</h3><ol><li><p>传入对象，类型css的对象</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:style</span>=<span class="string">&quot;&#123;color: &#x27;red&#x27;, fontSize: &#x27;14px&#x27;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>传入对象数组，将多个样式对象应用于同一个元素上</p></li><li><p>一个样式声明允许提供多个值，这样只会渲染数组中最后一个被浏览器支持的值</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; display: [&#x27;-webkit-box&#x27;, &#x27;-ms-flexbox&#x27;, &#x27;flex&#x27;] &#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="条件渲染">条件渲染</h2><h3 id="v-if-v-else-if-v-else">v-if / v-else-if / v-else</h3><div class="note orange icon modern"><i class="note-icon fa fa-battery-empty"></i><p><code>v-if</code> / <code>v-else-if</code>指令可以条件性的渲染一块内容，<code>v-else</code>当不满足条件时渲染某块</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;total &gt; 100&quot;</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;total &gt; 80&quot;</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="tip faa-horizontal animated"><p><code>vue</code>会高效的渲染元素，通常会复用已有的元素而不是从头渲染，如果在一个业务中，两个元素逻辑上是相互独立的，共用一个元素显然是不合理的。<code>vue</code>采用添加唯一的<code>key</code>来避免复用</p></div><iframe id="cp_embed_gOWMjjV" src="//codepen.io/milkdue/embed/gOWMjjV?height=300&theme-id=dark&slug-hash=gOWMjjV&default-tab=result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="v-show">v-show</h3><div class="tip warning"><p><code>v-show</code>不支持<code>template</code>和<code>v-else</code>，<code>v-show</code>渲染的元素会被保留在dom中，只切换元素<code>css</code>中的<code>display</code>属性，所以<code>v-if</code>有更高的切换开销，而<code>v-show</code>有更高的初始化渲染开销，切换频次少使用<code>v-if</code>，反之使用<code>v-show</code></p></div><h2 id="列表渲染">列表渲染</h2><h3 id="数组">数组</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;example-1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.message&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;item.message&#125;&#125; -- &#123;&#123;index&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#example-1&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            items: [</span><br><span class="line"><span class="javascript">                &#123;<span class="attr">message</span>: <span class="string">&#x27;foo&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">message</span>: <span class="string">&#x27;bar&#x27;</span>&#125;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="对象">对象</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">&quot;v-for-object&quot;</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value, name, index) in object&quot;</span>&gt;</span></span><br><span class="line">    &#123;&#123;value&#125;&#125; -- &#123;&#123;name&#125;&#125; -- &#123;&#123;index&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#v-for-object&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            object: &#123;</span><br><span class="line"><span class="javascript">                title: <span class="string">&#x27;How to do lists in Vue&#x27;</span>,</span></span><br><span class="line"><span class="javascript">                author: <span class="string">&#x27;Jane Doe&#x27;</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="维护状态">维护状态</h3><div class="note red icon modern"><i class="note-icon fa fa-hashtag"></i><p><code>vue</code>根据每项提供的唯一的<code>key</code>来追踪每一个节点的身份，使用<code>v-for</code>时，建议为每一项提供唯一的<code>key</code>，在组件中使用<code>v-for</code>，<code>key</code>是必须的</p></div><h3 id="数组更新检测">数组更新检测</h3><ol><li><code>vue</code>重写了数组的一些方法，调用以下方法将会触发视图更新<ul><li><code>push</code></li><li><code>pop</code></li><li><code>shift</code></li><li><code>unshift</code></li><li><code>splice</code></li><li><code>sort</code></li><li><code>reverse</code></li></ul></li><li>数组的一些方法不改变原数组而是返回一个新数组，用新数组替换原数组也会触发视图更新<ul><li><code>filter</code></li><li><code>map</code></li><li><code>concat</code></li><li><code>slice</code></li></ul></li></ol><h3 id="数组过滤-排序-使用计算属性">数组过滤 / 排序(使用计算属性)</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in filter&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item&quot;</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;ul&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            nums: [1, 2, 3, 4, 5, 6],</span><br><span class="line">        &#125;,</span><br><span class="line">        computed: &#123;</span><br><span class="line"><span class="javascript">            filter: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">return</span> <span class="built_in">this</span>.nums.filter(<span class="function"><span class="params">item</span> =&gt;</span> item % <span class="number">2</span> === <span class="number">0</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for-和-v-if-一起使用">v-for 和 v-if 一起使用</h3><div class="note red icon flat"><i class="note-icon fa fa-exclamation-triangle"></i><p>不推荐在同一个元素中同时使用 <code>v-for</code> 和 <code>v-if</code>，<code>v-for</code> 的优先级高于<code>v-if</code>，当只渲染部分节点时，可以同时使用~</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;item in todos&quot;</span> <span class="attr">v-if</span>=<span class="string">&quot;item.isShow&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.key&quot;</span>&gt;</span>&#123;&#123;item.todo&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;ul&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            todos: [</span><br><span class="line"><span class="javascript">                &#123;<span class="attr">isShow</span>: <span class="literal">true</span>, <span class="attr">todo</span>: <span class="string">&#x27;起床&#x27;</span>, <span class="attr">key</span>: <span class="string">&#x27;one&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">isShow</span>: <span class="literal">false</span>, <span class="attr">todo</span>: <span class="string">&#x27;早餐&#x27;</span>, <span class="attr">key</span>: <span class="string">&#x27;two&#x27;</span>&#125;,</span></span><br><span class="line"><span class="javascript">                &#123;<span class="attr">isShow</span>: <span class="literal">true</span>, <span class="attr">todo</span>: <span class="string">&#x27;午饭&#x27;</span>, <span class="attr">key</span>: <span class="string">&#x27;three&#x27;</span>&#125;</span></span><br><span class="line">            ],</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script</span><br></pre></td></tr></table></figure><h2 id="事件绑定">事件绑定</h2><div class="note blue icon flat"><i class="note-icon fa fa-link"></i><p>使用 <code>v-on</code> 指令监听 <code>dom</code>事件，例如 <code>v-on:click=&quot;function&quot;</code>，可以使用简写 <code>@</code>，例如 <code>@click=&quot;function&quot;</code></p></div><h3 id="事件处理方法">事件处理方法</h3><ol><li><p>在 <code>v-on</code> 指令中直接书写 <code>js</code> 代码</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sum += 2&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>sum: &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;.app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            sum: 0,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>事件处理流程写入方法中(默认将event对象传入)</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>sum: &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;.app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            sum: 0,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params">event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(event);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.sum += <span class="number">2</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="内联处理器中的方法">内联处理器中的方法</h3><div class="note green icon flat"><i class="note-icon fa fa-at"></i><p>除了直接绑定方法，还可以在指令中直接调用方法，并将参数传入，如果需要在内联语句中访问dom事件，可以用<span class='nota' data-nota='与位置无关'>特殊变量</span> <code>$event</code> 传入</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add(2, $event)&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>sum: &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;.app&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line">            sum: 0,</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="javascript">            <span class="function"><span class="title">add</span>(<span class="params">num, event</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">console</span>.log(event);</span></span><br><span class="line"><span class="javascript">                <span class="built_in">this</span>.sum += num;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="事件修饰符">事件修饰符</h3><div class="note pink icon flat"><i class="note-icon fa fa-battery-quarter"></i><p>在事件处理程序中调用 <code>event.preventDefault()</code> 或 <code>event.stopPropagation()</code> 是非常常见的需求，<code>vue</code> 提供了事件修饰符来处理 <code>dom</code> 事件细节</p></div><ol><li><span class='nota' data-nota='阻止单击事件继续传播'>.stop</span></li><li><span class='nota' data-nota='阻止浏览器默认行为'>.prevent</span></li><li><span class='nota' data-nota='添加事件监听器时使用事件捕获模式，从 document 传播到点击元素，即内部元素触发的事件先在此处理，然后才交由内部元素进行处理'>.capture</span></li><li><span class='nota' data-nota='只有当 event.target 是当前元素时，才触发事件'>.self</span></li><li><span class='nota' data-nota='事件只触发一次'>.once</span></li><li><span class='nota' data-nota='告诉浏览器不想阻止事件的默认行为，提高移动端性能'>.passive</span></li></ol><div class="tip "><p><code>passive</code> 这个修饰符会执行默认的方法，但明明是默认执行为什么要设置这个修饰符呢？因为浏览器只有等内核线程执行到事件监听器对应的 <code>JavaScript</code> 代码时，才能知道内部是否会调用 <code>preventDefault</code> 函数来阻止事件的默认行为，所以浏览器本身是没有办法对这种场景进行优化的。这种场景下，用户的手势事件无法快速产生，会导致页面无法快速执行滑动逻辑，从而让用户感觉到页面卡顿。通俗点说就是每次事件产生，浏览器都会去查询一下是否有 <code>preventDefault</code> 阻止该次事件的默认动作。我们加上 <code>passive</code> 就是为了告诉浏览器，不用查询了，我们没用 <code>preventDefault</code> 阻止默认动作， 这里一般用在滚动监听，<code>@scoll，@touchmove</code>。因为滚动监听过程中，移动每个像素都会产生一次事件，每次都使用内核线程查询 <code>prevent</code> 会使滑动卡顿。我们通过 <code>passive</code> 将内核线程查询跳过，可以大大提升滑动的流畅度</p></div><div class="note red icon modern"><i class="note-icon fa fa-key"></i><p>使用修饰符时，顺序很重要，相应的代码会以同样的顺序产生。因此，用 <code>v-on:click.prevent.self</code> 会阻止所有的点击，而 <code>v-on:click.self.prevent</code> 只会阻止对元素自身的点击。<code>passive</code> 和 <code>prevent</code> 冲突，不能同时绑定在一个监听器上</p></div><iframe id="cp_embed_OJmbyvd" src="//codepen.io/milkdue/embed/OJmbyvd?height=300&theme-id=dark&slug-hash=OJmbyvd&default-tab=result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><h3 id="按键修饰符">按键修饰符</h3><div class="note orange icon flat"><i class="note-icon fa fa-check"></i><p>监听键盘事件时，<code>v-on</code>在监听键盘事件时添加按键修饰符</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只有在 key 是 Enter 时调用 vm.submit() --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="按键码">按键码</h4><div class="note red icon flat"><i class="note-icon fa fa-exclamation-circle"></i><p><code>keyCode</code> 的事件用法已经被废弃了并可能不会被最新的浏览器支持</p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 当event.keyCode = 13时触发 submit --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.13</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="note green icon flat"><i class="note-icon fa fa-bullhorn"></i><p><code>vue</code> 提供了绝大多数常用的按键码的别名，并且有一些按键 (<code>.esc</code> 以及所有的方向键) 在 <code>IE9</code> 中有不同的 <code>key</code> 值, 如果你想支持 <code>IE9</code>，这些内置的别名应该是首选</p></div><ol><li><code>.enter</code></li><li><code>.tab</code></li><li><code>.delete</code></li><li><code>.esc</code></li><li><code>.space</code></li><li><code>.up</code></li><li><code>.down</code></li><li><code>.left</code></li><li><code>.right</code></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 还可以通过全局config.keyCodes对象自定义按键修饰符别名 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 使用v-on:keyup.f1 --&gt;</span></span><br><span class="line">Vue.config.keyCodes.f1 = 112;</span><br></pre></td></tr></table></figure><h3 id="系统修饰符">系统修饰符</h3><ol><li>用如下修饰符来实现仅在按下相应按键时才触发鼠标或键盘事件的监听器<ul><li><code>.ctrl</code></li><li><code>.alt</code></li><li><code>.shift</code></li><li><code>.meta</code></li></ul></li><li><code>.exact</code>修饰符<ul><li><code>.exact</code> 修饰符允许控制由精确的系统修饰符组合触发的事件</li></ul></li></ol><div class="tip "><p>请注意修饰键与常规按键不同，在和 <code>keyup</code> 事件一起用时，事件触发时修饰键必须处于按下状态。换句话说，只有在按住 <code>ctrl</code> 的情况下释放其它按键，才能触发 <code>keyup.ctrl</code>。而单单释放 <code>ctrl</code> 也不会触发事件。如果你想要这样的行为，请为 <code>ctrl</code> 换用 <code>keyCode：keyup.17</code></p></div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 即使 Alt 或 Shift 被一同按下时也会触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.ctrl</span>=<span class="string">&quot;onClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 有且只有 Ctrl 被按下的时候才触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.ctrl.exact</span>=<span class="string">&quot;onCtrlClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 没有任何系统修饰符被按下的时候才触发 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click.exact</span>=<span class="string">&quot;onClick&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="鼠标按钮修饰符">鼠标按钮修饰符</h3><ol><li><code>.left</code></li><li><code>.right</code></li><li><code>.middle</code></li></ol><h2 id="表单输入绑定">表单输入绑定</h2><div class="note orange icon flat"><i class="note-icon fa fa-info-circle"></i><p><code>v-model</code> 指令在表单 <code>input、textarea、select</code> 元素上创建双向数据绑定。根据控件类型自动选取正确的方法来更新元素。<code>v-model</code> 会忽略所有表单元素的 <code>value、checked、selected</code> 属性的初始值而总是将<code>vue</code> 实例的数据作为数据来源</p></div><ol><li><code>v-model</code>在内部为不同的输入元素使用不同的<code>property</code>并抛出不同的事件<ul><li><code>text</code>和<code>textarea</code>元素使用<code>value</code>属性和<code>input</code>事件</li><li><code>checkbox</code>和<code>radio</code>使用<code>checked</code>属性和<code>change</code>事件</li><li><code>select</code>元素将<code>value</code>作为<code>prop</code>并将<code>change</code>作为事件</li></ul></li></ol><h3 id="修饰符">修饰符</h3><ol><li><code>.lazy</code>，在默认情况下 <code>v-model</code> 在每次 <code>input</code> 事件触发后将输入框的值与数据进行同步，添加 <code>.lazy</code> 修饰符，从而转为在 <code>change</code> 事件之后进行同步</li><li><code>.number</code>，自动将用户的输入值转为数值类型，可以给 <code>v-model</code> 添加 <code>number</code> 修饰符，如果这个值无法被 <code>parseFloat()</code> 解析，则会返回原始的值</li><li><code>.trim</code>，自动过滤用户输入的首尾空白字符，可以给 <code>v-model</code> 添加 <code>trim</code> 修饰符</li></ol><h2 id="组件">组件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个名为 button-counter 的新组件</span></span><br><span class="line">Vue.component(<span class="string">&#x27;button-counter&#x27;</span>, &#123;</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count: <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">&#x27;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">&lt;button-counter&gt;&lt;/button-counter&gt;</span><br></pre></td></tr></table></figure><h3 id="data">data</h3><div class="note red icon flat"><i class="note-icon fa fa-cloud"></i><p>在组件中，data必须是一个函数，因为每一个实例需要维护被返回对象的独立的拷贝</p></div><h3 id="prop传递数据">prop传递数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">  props: [<span class="string">&#x27;title&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;h3&gt;&#123;&#123;title&#125;&#125;&lt;/h3&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="监听子组件事件">监听子组件事件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;blog-posts-events-demo&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;&#123; fontSize: postFontSize + &#x27;em&#x27; &#125;&quot;</span>&gt;</span></span><br><span class="line">    &lt;blog-post</span><br><span class="line">      v-for=&quot;post in posts&quot;</span><br><span class="line">      v-bind:key=&quot;post.id&quot;</span><br><span class="line">      v-bind:post=&quot;post&quot;</span><br><span class="line">      v-on:enlarge-text=&quot;postFontSize += 0.1&quot; </span><br><span class="line">    &gt;<span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span><span class="comment">&lt;!-- 绑定事件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;post&#x27;</span>],</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 触发事件 $emit</span></span></span><br><span class="line">        template: `</span><br><span class="line"><span class="javascript">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;blog-post&quot;</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">post.title</span> &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;$emit(&#x27;enlarge-text&#x27;)&quot;</span>&gt;</span></span></span></span><br><span class="line">                Enlarge text</span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;post.content&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line">        `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="javascript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="javascript">        el: <span class="string">&#x27;#blog-posts-events-demo&#x27;</span>,</span></span><br><span class="line">        data: &#123;</span><br><span class="line"><span class="javascript">            posts: [<span class="comment">/* ... */</span>],</span></span><br><span class="line">            postFontSize: 1</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用事件抛出一个值">使用事件抛出一个值</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">&quot;$emit(&#x27;enlarge-text&#x27;, 0.1)&quot;</span>&gt;</span></span><br><span class="line">  Enlarge text</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 通过$event获取这个值 --&gt;</span></span><br><span class="line">&lt;blog-post</span><br><span class="line">  v-on:enlarge-text=&quot;postFontSize += $event&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果绑定的事件是一个函数 这个值通过参数获取 --&gt;</span></span><br><span class="line">&lt;blog-post</span><br><span class="line">  v-on:enlarge-text=&quot;changeFontSize&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">blog-post</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line">    methods: &#123;</span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">changeFontSize</span>(<span class="params">size</span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="built_in">this</span>.postFontSize += size;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="组件中使用-v-model">组件中使用 v-model</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">&quot;searchText&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 等价于 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">:value</span>=<span class="string">&quot;searchText&quot;</span> @<span class="attr">input</span>=<span class="string">&quot;searchText = $event.target.value&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 当用到组件中等价于 --&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;my-component</span><br><span class="line">    v-model=&quot;searchText&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;my-conponent</span><br><span class="line">    :value=&quot;searchText&quot;</span><br><span class="line">    @input=&quot;searchText = $event&quot;</span><br><span class="line">&gt;<span class="tag">&lt;/<span class="name">my-component</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 如果需要组件正常工作，必须在 value 属性绑定在一个名字是value的prop上，并且input事件被触发时，将新的值通过自定义的ihput事件抛出 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span></span><br><span class="line"><span class="javascript">        props: [<span class="string">&#x27;value&#x27;</span>],</span></span><br><span class="line">        template: `</span><br><span class="line">            &lt;input</span><br><span class="line"><span class="javascript">                :value=<span class="string">&quot;value&quot;</span></span></span><br><span class="line"><span class="javascript">                @input=<span class="string">&quot;$emit(&#x27;input&#x27;, $event.target.value)&quot;</span></span></span><br><span class="line">            /&gt;</span><br><span class="line">        `</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="动态组件">动态组件</h3><div class="note orange icon flat"><i class="note-icon fa fa-battery-empty"></i><p><code>vue</code> 的 <code>component</code> 元素加一个特殊的 <code>is</code> 属性来实现动态组件，<code>is</code>后面的值可以是一个组件的名字或者是一个组件的选项对象</p></div><iframe src="https://codesandbox.io/embed/github/vuejs/vuejs.org/tree/master/src/v2/examples/vue-20-dynamic-components?expanddevtools=0&fontsize=14&hidenavigation=1&theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"    title="github/vuejs/vuejs.org/tree/master/src/v2/examples/vue-20-dynamic-components"    allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"    sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"  ></iframe><h3 id="组件名">组件名</h3><h4 id="使用-kebab-case">使用 kebab-case</h4><div class="note red icon flat"><i class="note-icon fa fa-cloud"></i><p>当使用 <span class='nota' data-nota='短横线分隔命名'>kebab-case</span> 定义一个组件时，也必须在引用这个自定义元素时使用kebab-case</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;my-component-name&#x27;</span>, &#123; <span class="comment">/* ... */</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用</span></span><br><span class="line">&lt;my-component-name&gt;&lt;/my-component-name&gt;</span><br></pre></td></tr></table></figure><h4 id="使用-PascalCase">使用 PascalCase</h4><div class="note green icon flat"><i class="note-icon fa fa-camera"></i><p>当使用 <span class='nota' data-nota='首字母大写命名'>PascalCase</span> 定义一个组件时，引用这个自定义元素时两种命名法都可以使用</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;MyComponentName&#x27;</span>, &#123; <span class="comment">/* ... */</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 两种都可以</span></span><br><span class="line">&lt;my-component-name&gt;&lt;/my-component-name&gt;</span><br><span class="line">&lt;MyComponentName&gt;&lt;/MyComponentName&gt;</span><br></pre></td></tr></table></figure><h3 id="全局注册">全局注册</h3><div class="tip "><p>通过 <code>Vue.component</code> 来创建的组件都是全局注册的组件，注册以后就可以用在任何新创建的 <code>vue</code> 根实例</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;component-a&#x27;</span>, &#123; <span class="comment">/* ... */</span> &#125;)</span><br><span class="line">Vue.component(<span class="string">&#x27;component-b&#x27;</span>, &#123; <span class="comment">/* ... */</span> &#125;)</span><br><span class="line">Vue.component(<span class="string">&#x27;component-c&#x27;</span>, &#123; <span class="comment">/* ... */</span> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123; <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span> &#125;)</span><br></pre></td></tr></table></figure><h3 id="局部注册">局部注册</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ComponentA = &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="keyword">var</span> ComponentB = &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"><span class="keyword">var</span> ComponentC = &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">&#x27;component-a&#x27;</span>: ComponentA,</span><br><span class="line">    <span class="string">&#x27;component-b&#x27;</span>: ComponentB</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于单文件组件</span></span><br><span class="line"><span class="keyword">import</span> ComponentA <span class="keyword">from</span> <span class="string">&#x27;./ComponentA.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    ComponentA</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 局部注册的组件在其子组件中不可用。例如，如果你希望 ComponentA 在 ComponentB 中可用，需要在组件B中声明A组件</span></span><br><span class="line"><span class="keyword">var</span> ComponentA = &#123; <span class="comment">/* ... */</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ComponentB = &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    <span class="string">&#x27;component-a&#x27;</span>: ComponentA</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note red icon flat"><i class="note-icon fa fa-exclamation-circle"></i><p>局部注册的组件在其子组件中不可用</p></div><h3 id="基础组件的自动化全局注册">基础组件的自动化全局注册</h3><div class="note green icon flat"><i class="note-icon fa fa-cogs"></i><p>使用 <code>webpack</code> 中的方法 <code>require.context</code> 自动化导入组件</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>.context(directory: <span class="built_in">String</span>, <span class="attr">useSubdirectories</span>: <span class="built_in">Boolean</span>, <span class="attr">regExp</span>: <span class="built_in">RegExp</span>): <span class="built_in">Object</span></span><br><span class="line"><span class="comment">// directory -&gt; 文件路径</span></span><br><span class="line"><span class="comment">// useSubdirectories -&gt; 是否查找子目录</span></span><br><span class="line"><span class="comment">// regExp -&gt; 要匹配文件的正则</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// test</span></span><br><span class="line"><span class="comment">// ├─components</span></span><br><span class="line"><span class="comment">//   ├─ A.js</span></span><br><span class="line"><span class="comment">//   ├─ B.js</span></span><br><span class="line"><span class="comment">//   ├─ C.js</span></span><br><span class="line"><span class="comment">//   └─ D.js</span></span><br><span class="line"><span class="comment">// └─ index.js</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">require</span>.context(<span class="string">&#x27;./components&#x27;</span>, <span class="literal">true</span>, <span class="regexp">/\.js$/</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回</span></span><br><span class="line"><span class="keyword">var</span> map = &#123;</span><br><span class="line">    <span class="string">&quot;./A.js&quot;</span>: <span class="string">&quot;./src/components/test/components/A.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;./B.js&quot;</span>: <span class="string">&quot;./src/components/test/components/B.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;./C.js&quot;</span>: <span class="string">&quot;./src/components/test/components/C.js&quot;</span>,</span><br><span class="line">    <span class="string">&quot;./D.js&quot;</span>: <span class="string">&quot;./src/components/test/components/D.js&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">webpackContext</span>(<span class="params">req</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> id = webpackContextResolve(req);</span><br><span class="line">    <span class="keyword">return</span> __webpack_require__(id); <span class="comment">// 返回__webpack_require__(id) 相当于require或者import</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">webpackContextResolve</span>(<span class="params">req</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 接收一个参数，req 是test文件夹下面匹配文件的相对路径，返回这个文件相对整个工程的相对路径</span></span><br><span class="line">    <span class="keyword">var</span> id = map[req];</span><br><span class="line">    <span class="keyword">if</span>(!(id + <span class="number">1</span>)) &#123; <span class="comment">// check for number or string</span></span><br><span class="line">        <span class="keyword">var</span> e = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">&quot;Cannot find module &#x27;&quot;</span> + req + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">        e.code = <span class="string">&#x27;MODULE_NOT_FOUND&#x27;</span>;</span><br><span class="line">        <span class="keyword">throw</span> e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> id; <span class="comment">// 执行环境的id，返回的是一个字符串，用于热加载 module.hot.accept</span></span><br><span class="line">&#125;</span><br><span class="line">webpackContext.keys = <span class="function"><span class="keyword">function</span> <span class="title">webpackContextKeys</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Object</span>.keys(map); <span class="comment">// 获取模型map内部的键名</span></span><br><span class="line">&#125;;</span><br><span class="line">webpackContext.resolve = webpackContextResolve;</span><br><span class="line"><span class="built_in">module</span>.exports = webpackContext; <span class="comment">// 返回一个函数 函数有两个方法 resolve 和 keys</span></span><br><span class="line">webpackContext.id = <span class="string">&quot;./src/components/test/components sync recursive \\.js$&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引入组件</span></span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>.context(<span class="string">&#x27;./components&#x27;</span>, <span class="literal">true</span>, <span class="regexp">/\.js$/</span>);</span><br><span class="line"><span class="keyword">const</span> map = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">const</span> key <span class="keyword">of</span> webpack.keys())&#123;</span><br><span class="line">    map[key] = webpack(key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(map); <span class="comment">// map中就是一个个module</span></span><br></pre></td></tr></table></figure><div class="tip "><p><code>require.context</code> 执行后，返回一个方法 <code>webpackContext</code>，这个方法又返回一个 <code>__webpack_require__</code> ，这个<code>__webpack_require__</code> 就相当于 <code>require</code> 或者 <code>import</code>。同时<code>webpackContext</code> 还有二个静态方法 <code>keys</code> 与 <code>resolve</code>，一个 <code>id</code> 属性</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vue基础组件全局注册</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> upperFirst <span class="keyword">from</span> <span class="string">&#x27;lodash/upperFirst&#x27;</span></span><br><span class="line"><span class="keyword">import</span> camelCase <span class="keyword">from</span> <span class="string">&#x27;lodash/camelCase&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> requireComponent = <span class="built_in">require</span>.context(</span><br><span class="line">  <span class="comment">// 其组件目录的相对路径</span></span><br><span class="line">  <span class="string">&#x27;./components&#x27;</span>,</span><br><span class="line">  <span class="comment">// 是否查询其子目录</span></span><br><span class="line">  <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">// 匹配基础组件文件名的正则表达式</span></span><br><span class="line">  /Base[A-Z]\w+\.(vue|js)$/</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">requireComponent.keys().forEach(<span class="function"><span class="params">fileName</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 返回执行require或import的结果</span></span><br><span class="line">  <span class="keyword">const</span> componentConfig = requireComponent(fileName)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取组件的 PascalCase 命名</span></span><br><span class="line">  <span class="keyword">const</span> componentName = upperFirst(</span><br><span class="line">    camelCase(</span><br><span class="line">      <span class="comment">// 获取和目录深度无关的文件名</span></span><br><span class="line">      fileName</span><br><span class="line">        .split(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        .pop()</span><br><span class="line">        .replace(<span class="regexp">/\.\w+$/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 全局注册组件</span></span><br><span class="line">  Vue.component(</span><br><span class="line">    componentName,</span><br><span class="line">    <span class="comment">// 如果这个组件选项是通过 export default 导出的，</span></span><br><span class="line">    <span class="comment">// 那么就会优先使用 .default，</span></span><br><span class="line">    <span class="comment">// 否则回退到使用模块的根。</span></span><br><span class="line">    componentConfig.default || componentConfig</span><br><span class="line">  )</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="tip ban faa-horizontal animated"><p>全局注册的行为必须在根 <code>Vue</code> 实例 (通过 <code>new Vue</code>) 创建之前发生</p></div><h2 id="prop">prop</h2><h3 id="prop的大小写">prop的大小写</h3><div class="note orange icon modern"><i class="note-icon fa fa-battery-full"></i><p><code>HTML</code> 中的 <code>attribute</code> 名是大小写不敏感的，所以浏览器会把所有大写字符解释为小写字符。这意味着当使用 <code>DOM</code> 中的模板时，<span class='nota' data-nota='驼峰命名法'>camelCase</span> 的 <code>prop</code> 名需要使用其等价的 <span class='nota' data-nota='短横线分隔命名法'>kebab-case</span> 命名，如果使用字符串模板，那么这个限制就不存在了</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">  <span class="comment">// 在 JavaScript 中是 camelCase 的</span></span><br><span class="line">  props: [<span class="string">&#x27;postTitle&#x27;</span>],</span><br><span class="line">  template: <span class="string">&#x27;&lt;h3&gt;&#123;&#123; postTitle &#125;&#125;&lt;/h3&gt;&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// &lt;!-- 在 HTML 中是 kebab-case 的 --&gt;</span></span><br><span class="line">&lt;blog-post post-title=<span class="string">&quot;hello!&quot;</span>&gt;&lt;/blog-post&gt;</span><br></pre></td></tr></table></figure><h3 id="prop类型">prop类型</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 以数组形式列出props</span></span><br><span class="line">props: [<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;likes&#x27;</span>, <span class="string">&#x27;isPublished&#x27;</span>, <span class="string">&#x27;commentIds&#x27;</span>, <span class="string">&#x27;author&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以对象形式列出props及其类型</span></span><br><span class="line">props: &#123;</span><br><span class="line">  title: <span class="built_in">String</span>,</span><br><span class="line">  likes: <span class="built_in">Number</span>,</span><br><span class="line">  isPublished: <span class="built_in">Boolean</span>,</span><br><span class="line">  commentIds: <span class="built_in">Array</span>,</span><br><span class="line">  author: <span class="built_in">Object</span>,</span><br><span class="line">  callback: <span class="built_in">Function</span>,</span><br><span class="line">  contactsPromise: <span class="built_in">Promise</span> <span class="comment">// 或者其他构造函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个静态值</span></span><br><span class="line">&lt;blog-post title=<span class="string">&quot;My journey with Vue&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个动态值 需要使用v-bind</span></span><br><span class="line">&lt;blog-post v-bind:title=<span class="string">&quot;post.title&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个数字 使用v-bind</span></span><br><span class="line">&lt;blog-post v-bind:likes=<span class="string">&quot;42&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个布尔值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 包含该 prop 没有值的情况在内，都意味着 true</span></span><br><span class="line">&lt;blog-post is-published&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 即便 false 是静态的，我们仍然需要 v-bind 来告诉 Vue</span></span><br><span class="line"><span class="comment">// 这是一个 JavaScript 表达式而不是一个字符串</span></span><br><span class="line">&lt;blog-post v-bind:is-published=<span class="string">&quot;false&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用一个变量进行动态赋值</span></span><br><span class="line">&lt;blog-post v-bind:is-published=<span class="string">&quot;post.isPublished&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个数组</span></span><br><span class="line"><span class="comment">// 即便数组是静态的，我们仍然需要 v-bind 来告诉 Vue</span></span><br><span class="line"><span class="comment">// 这是一个 JavaScript 表达式而不是一个字符串</span></span><br><span class="line">&lt;blog-post v-bind:comment-ids=<span class="string">&quot;[234, 266, 273]&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用一个变量进行动态赋值</span></span><br><span class="line">&lt;blog-post v-bind:comment-ids=<span class="string">&quot;post.commentIds&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个对象</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 即便对象是静态的，我们仍然需要 v-bind 来告诉 Vue</span></span><br><span class="line"><span class="comment">// 这是一个 JavaScript 表达式而不是一个字符串</span></span><br><span class="line">&lt;blog-post</span><br><span class="line">  v-bind:author=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">    name: &#x27;Veronica&#x27;,</span></span><br><span class="line"><span class="string">    company: &#x27;Veridian Dynamics&#x27;</span></span><br><span class="line"><span class="string">  &#125;&quot;</span></span><br><span class="line">&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用一个变量进行动态赋值</span></span><br><span class="line">&lt;blog-post v-bind:author=<span class="string">&quot;post.author&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 传入一个对象的所有property</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果你想要将一个对象的所有 property 都作为 prop 传入，你可以使用不带参数的 v-bind (取代 v-bind:prop-name)</span></span><br><span class="line">post: &#123;</span><br><span class="line">  id: <span class="number">1</span>,</span><br><span class="line">  title: <span class="string">&#x27;My Journey with Vue&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;blog-post v-bind=<span class="string">&quot;post&quot;</span>&gt;&lt;/blog-post&gt;</span><br><span class="line"><span class="comment">// 等价于</span></span><br><span class="line">&lt;blog-post</span><br><span class="line">  v-bind:id=<span class="string">&quot;post.id&quot;</span></span><br><span class="line">  v-bind:title=<span class="string">&quot;post.title&quot;</span></span><br><span class="line">&gt;&lt;/blog-post&gt;</span><br></pre></td></tr></table></figure><h3 id="单向数据流">单向数据流</h3><div class="note pink icon modern"><i class="note-icon fa fa-flag"></i><p>所有的 <code>prop</code> 都使得其父子 <code>prop</code> 之间形成了一个单向下行绑定：父级 <code>prop</code> 的更新会向下流动到子组件中，但是反过来则不行。这样会防止从子组件意外变更父级组件的状态，额外的，每次父级组件发生变更时，子组件中所有的 prop 都将会刷新为最新的值。这意味着你不应该在一个子组件内部改变 <code>prop</code></p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个 prop 用来传递一个初始值；这个子组件接下来希望将其作为一个本地的 prop 数据来使用。在这种情况下，最好定义一个本地的 data property 并将这个 prop 用作其初始值</span></span><br><span class="line">props: [<span class="string">&#x27;initialCounter&#x27;</span>],</span><br><span class="line">data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    counter: <span class="built_in">this</span>.initialCounter</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个 prop 以一种原始的值传入且需要进行转换。在这种情况下，最好使用这个 prop 的值来定义一个计算属性</span></span><br><span class="line"></span><br><span class="line">props: [<span class="string">&#x27;size&#x27;</span>],</span><br><span class="line">computed: &#123;</span><br><span class="line">  normalizedSize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.size.trim().toLowerCase()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意在 JavaScript 中对象和数组是通过引用传入的，所以对于一个数组或对象类型的 prop 来说，在子组件中改变变更这个对象或数组本身将会影响到父组件的状态</span></span><br></pre></td></tr></table></figure><h3 id="prop验证">prop验证</h3><div class="note purple icon modern"><i class="note-icon fa fa-tree"></i><p>可以为组件的 <code>prop</code> 指定验证要求，如果有一个需求没有被满足，则 <code>Vue</code> 会在浏览器控制台中发出警告</p></div><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">&#x27;my-component&#x27;</span>, &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    <span class="comment">// 基础的类型检查 (null 和 undefined 会通过任何类型验证)</span></span><br><span class="line">    propA: <span class="built_in">Number</span>,</span><br><span class="line">    <span class="comment">// 多个可能的类型</span></span><br><span class="line">    propB: [<span class="built_in">String</span>, <span class="built_in">Number</span>],</span><br><span class="line">    <span class="comment">// 必填的字符串</span></span><br><span class="line">    propC: &#123;</span><br><span class="line">      type: <span class="built_in">String</span>,</span><br><span class="line">      required: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 带有默认值的数字</span></span><br><span class="line">    propD: &#123;</span><br><span class="line">      type: <span class="built_in">Number</span>,</span><br><span class="line">      <span class="keyword">default</span>: <span class="number">100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 带有默认值的对象</span></span><br><span class="line">    propE: &#123;</span><br><span class="line">      type: <span class="built_in">Object</span>,</span><br><span class="line">      <span class="comment">// 对象或数组默认值必须从一个工厂函数获取</span></span><br><span class="line">      <span class="keyword">default</span>: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123; <span class="attr">message</span>: <span class="string">&#x27;hello&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// 自定义验证函数</span></span><br><span class="line">    propF: &#123;</span><br><span class="line">      validator: <span class="function"><span class="keyword">function</span> (<span class="params">value</span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 这个值必须匹配下列字符串中的一个</span></span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;warning&#x27;</span>, <span class="string">&#x27;danger&#x27;</span>].indexOf(value) !== -<span class="number">1</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><div class="tip ban faa-flash animated"><p>注意那些 <code>prop</code> 会在一个组件实例创建之前进行验证，所以实例的 <code>property</code> (如 <code>data、computed</code> 等) 在 <code>default</code> 或 <code>validator</code> 函数中是不可用的</p></div><ol><li><code>type</code> 可以是下面原生的构造函数或其他自定义构造函数，并且通过 <code>instanceof</code> 来进行检查确认<ul><li><code>String</code></li><li><code>Number</code></li><li><code>Boolean</code></li><li><code>Array</code></li><li><code>Object</code></li><li><code>Date</code></li><li><code>Function</code></li><li><code>Symbol</code></li></ul></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Person</span> (<span class="params">firstName, lastName</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">this</span>.firstName = firstName;</span><br><span class="line">  <span class="built_in">this</span>.lastName = lastName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">&#x27;blog-post&#x27;</span>, &#123;</span><br><span class="line">  props: &#123;</span><br><span class="line">    author: Person,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="非-prop-的-Attribute">非 prop 的 Attribute</h3><p>一个非 <code>prop</code> 的 <code>attribute</code> 是指传向一个组件，但是该组件并没有相应 <code>prop</code> 定义的 <code>attribute</code>，因为显式定义的 <code>prop</code> 适用于向一个子组件传入信息，然而组件库的作者并不总能预见组件会被用于怎样的场景。这也是为什么组件可以接受任意的 <code>attribute</code>，而这些 attribute 会被添加到这个组件的根元素上</p><h4 id="替换-合并已有的-Attribute">替换 / 合并已有的 Attribute</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">&quot;date&quot;</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">&quot;form-control&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.6600em" columnalign="center center center" columnlines="dashed dashed" columnspacing="1em" rowlines="solid dashed"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>b</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>c</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>d</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>e</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>f</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>g</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>h</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>i</mi></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\def\arraystretch{1.5}\begin{array}{c:c:c}a &amp; b &amp; c \\\hlined &amp; e &amp; f \\\hdashlineg &amp; h &amp; i\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.4em;vertical-align:-2.45em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:4.95em;"></span><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">d</span></span></span><span style="top:-1.3499999999999996em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:5.4em;border-right-width:0.04em;border-right-style:dashed;margin:0 -0.02em;vertical-align:-2.45em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">b</span></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">e</span></span></span><span style="top:-1.3499999999999996em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="vertical-separator" style="height:5.4em;border-right-width:0.04em;border-right-style:dashed;margin:0 -0.02em;vertical-align:-2.45em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-4.95em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">c</span></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-1.3499999999999996em;"><span class="pstrut" style="height:3.26em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span><span style="top:-4.300000000000001em;"><span class="pstrut" style="height:4.95em;"></span><span class="hdashline" style="border-bottom-width:0.04em;"></span></span><span style="top:-6.1000000000000005em;"><span class="pstrut" style="height:4.95em;"></span><span class="hline" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><munder><mo>∭</mo><mi mathvariant="normal">Ω</mi></munder><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>+</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>R</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>V</mi><mo>=</mo><munder><mo>∯</mo><mi mathvariant="normal">Σ</mi></munder><mi>P</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\iiint\limits_{Ω}(\dfrac{∂P}{∂x}+\dfrac{∂Q}{∂y}+\dfrac{∂R}{∂z})\mathrm{d}V=\oiint\limits_{Σ}P\mathrm{d}y\mathrm{d}z+Q\mathrm{d}x\mathrm{d}z+R\mathrm{d}x\mathrm{d}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9767710000000003em;vertical-align:-1.605331em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3609999999999998em;"><span style="top:-1.8546690000000003em;margin-left:-0.44445em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Ω</span></span></span></span><span style="top:-3.361em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span><span class="mop op-symbol large-op" style="margin-right:0.44445em;">∭</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.605331em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.966331em;vertical-align:-1.605331em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3609999999999998em;"><span style="top:-1.854669em;margin-left:-0.44445em;"><span class="pstrut" style="height:3.36em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Σ</span></span></span></span><span style="top:-3.3609999999999998em;"><span class="pstrut" style="height:3.36em;"></span><span><span class="mop vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3599999999999999em;"><span style="top:-3.3600000000000003em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="mop op-symbol large-op" style="margin-right:0.44445em;">∬</span></span><span style="top:-3.2800000000000002em;"><span class="pstrut" style="height:3.3600000000000003em;"></span><span class="overlay" style="height:0.659em;width:1.472em;"><svg width='1.472em' height='0.659em' style='width:1.472em' viewBox='0 0 1472 659' preserveAspectRatio='xMinYMin'><path d='M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230zm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2c0 110 84 276 504 276s502.4-166 502.4-276z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.862em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.605331em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∭</mo><mi mathvariant="normal">Ω</mi></munder><mo stretchy="false">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>P</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>x</mi></mrow></mfrac></mstyle><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Q</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac></mstyle><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>R</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>z</mi></mrow></mfrac></mstyle><mo stretchy="false">)</mo><mi mathvariant="normal">d</mi><mi>V</mi><mo>=</mo><munder><mo>∯</mo><mi mathvariant="normal">Σ</mi></munder><mi>P</mi><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>Q</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>z</mi><mo>+</mo><mi>R</mi><mi mathvariant="normal">d</mi><mi>x</mi><mi mathvariant="normal">d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\iiint\limits_{Ω}(\dfrac{∂P}{∂x}+\dfrac{∂Q}{∂y}+\dfrac{∂R}{∂z})\mathrm{d}V=\oiint\limits_{Σ}P\mathrm{d}y\mathrm{d}z+Q\mathrm{d}x\mathrm{d}z+R\mathrm{d}x\mathrm{d}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.421271em;vertical-align:-1.049831em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8055em;"><span style="top:-2.050169em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Ω</span></span></span></span><span style="top:-3.0005em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∭</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.049831em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">x</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.25188em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">Q</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.855331em;vertical-align:-1.049831em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8055em;"><span style="top:-2.050169em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">Σ</span></span></span></span><span style="top:-3.0005em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8049999999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∬</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="overlay" style="height:0.499em;width:0.957em;"><svg width='0.957em' height='0.499em' style='width:0.957em' viewBox='0 0 957 499' preserveAspectRatio='xMinYMin'><path d='M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2zm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.860.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.306em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.049831em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">Q</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mord mathrm">d</span><span class="mord mathnormal">x</span><span class="mord mathrm">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几个不常见的html、css属性</title>
      <link href="c314f6ea/"/>
      <url>c314f6ea/</url>
      
        <content type="html"><![CDATA[<div class="tip warning faa-horizontal animated"><p>以下内容提到的标签和属性均不考虑浏览器的兼容性，使用时根据实际场景选择是否可以使用和代替</p></div><h2 id="line-clamp属性">line-clamp属性</h2><div class="tip "><p>line-clamp 是一个不规范的属性，使用它时可以视情况组合-webkit或-moz进行使用</p></div><p><code>line-clamp</code> 用于限制块元素显示文本的行数，并且只有当 <code>display</code> 属性设置为 <code>-webkit-box</code> 或 <code>-webkit-inline-box</code> 并且<span class='nota' data-nota='指定一个box子元素是否按照水平或垂直排列'>-webkit-box-orient</span>属性设置为 <code>vertical</code> 之后才会生效，通常需要搭配 <code>overflow: hidden</code> 实现指定显示行数的内容。<code>-webkit-line-clamp: 1</code> 配合其他属性和以下样式实现的效果一样</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"><span class="attribute">white-space</span>: nowrap;</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br></pre></td></tr></table></figure><iframe id="cp_embed_XWRmmBQ" src="//codepen.io/milkdue/embed/preview/XWRmmBQ?height=300&theme-id=dark&slug-hash=XWRmmBQ&default-tab=html,result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vercel托管node.js的api服务</title>
      <link href="5650e2f5/"/>
      <url>5650e2f5/</url>
      
        <content type="html"><![CDATA[<h2 id="vercel">vercel</h2><div class="note red icon flat"><i class="note-icon fa fa-exclamation-triangle"></i><p>vercel提供免费的网站托管服务，类似于<code>github page</code>，但它远比<code>page</code>更加强大，速度也快很多。同时vercel支持部署serverless接口，支持py、node等</p></div><h2 id="托管服务">托管服务</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">github托管服务</button></li><li class="tab"><button type="button" data-href="#test4-2">vercel cli托管服务</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><div class="timeline"><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip "><ol><li><code>npm init</code>初始化一个工程</li><li>创建远程仓库之后<code>clone</code>下来</li><li>创建api目录</li><li>在api目录中创建index.js</li><li>代码推入远程仓库</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;<span class="attr">number</span>: <span class="number">1</span>, <span class="attr">name</span>: req.query.name || <span class="string">&#x27;peiqi&#x27;</span>&#125;;</span><br><span class="line">    res.json(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></div><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip success"><ol><li>登录<a href="https://vercel.com/">vercel</a>官网</li><li>授权github登入vercel</li><li><code>new project</code></li><li>导入github中对应的仓库</li><li>deploy部署</li></ol></div></div></div><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip bolt"><ol><li>首页visit(会出现404)</li><li>在浏览器地址栏追加/api?name=suxi</li></ol></div></div></div><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip home"><details ><summary> 避免404 </summary>              <div class='content'>              <ol><li>根目录添加vercel.json的配置</li><li>根目录添加index.html</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;routes&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;handle&quot;</span>: <span class="string">&quot;filesystem&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">&quot;src&quot;</span>: <span class="string">&quot;/(.*)&quot;</span>,</span><br><span class="line">            <span class="attr">&quot;status&quot;</span>: <span class="number">404</span>,</span><br><span class="line">            <span class="attr">&quot;dest&quot;</span>: <span class="string">&quot;/index.html&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>              </div>            </details></div></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="timeline"><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip "><ol><li><code>npm init</code>初始化一个工程</li><li>全局安装vercel <code>npm i vercel -g</code></li><li>登录vercel <code>vercel login</code> 或 <code>vc login</code></li><li>授权登录完毕后输入 <code>vercel</code> 初始化vercel项目</li><li>添加vercel.json配置和404页面</li><li>添加api目录并定义index.js</li></ol></div></div></div><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip success"><ol><li><code>vercel</code> 或 <code>vc</code> 命令本地预览接口</li><li><code>vercel --prod</code> 或 <code>vc --prod</code> 命令部署到远程vercel中</li></ol></div></div></div><div class="timenode"><div class="meta"><p></p></div><div class="body"><div class="tip bolt"><ol><li>访问预览</li><li>在浏览器地址栏追加/api?name=suxi</li></ol></div></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="node配合ts">node配合ts</h2><div class="tip animated"><p>推荐使用ts托管api服务</p></div><ol><li><p>全局安装typescript</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -g typescript</span><br></pre></td></tr></table></figure></li><li><p>安装其他依赖</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i @vercel/node -D</span><br><span class="line">npm i babel-register -D</span><br><span class="line">npm i babel-plugin-transform-es2015-modules-commonjs -D</span><br></pre></td></tr></table></figure></li><li><p>根目录新建typescript的配置文件tsconfig.json</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;compilerOptions&quot;</span>: &#123;</span><br><span class="line">        <span class="attr">&quot;target&quot;</span>: <span class="string">&quot;es6&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;module&quot;</span>: <span class="string">&quot;commonjs&quot;</span>,</span><br><span class="line">        <span class="attr">&quot;emitDecoratorMetadata&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;experimentalDecorators&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;sourceMap&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">&quot;noEmitHelpers&quot;</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">&quot;exclude&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;node_modules&quot;</span>,</span><br><span class="line">        <span class="string">&quot;typings/main&quot;</span>,</span><br><span class="line">        <span class="string">&quot;typings/main.d.ts&quot;</span>,</span><br><span class="line">        <span class="string">&quot;typings/browser&quot;</span>,</span><br><span class="line">        <span class="string">&quot;typings/browser.d.ts&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;compileOnSave&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建<code>.env</code>文件设置时区</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TZ&#x3D;&#39;asia&#x2F;beijing&#39;</span><br></pre></td></tr></table></figure></li><li><p>api目录中添加index.ts</p> <figure class="highlight ts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="keyword">async</span> (req: <span class="built_in">any</span>, <span class="attr">res</span>: <span class="built_in">any</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> data = &#123;<span class="attr">number</span>: <span class="number">1</span>, <span class="attr">name</span>: req.query.name || <span class="string">&#x27;suxi&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    res.status(<span class="number">200</span>).json(data);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>预览访问</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vercel </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bufferfly主题的一些美化</title>
      <link href="bf0e4745/"/>
      <url>bf0e4745/</url>
      
        <content type="html"><![CDATA[<h2 id="哔哔点啥首页轮播">哔哔点啥首页轮播</h2><div class="tip cogs"><p>首页轮播需要转存json文件，如果没有设置请参照下方木木的教程进行配置</p></div><div class="tag link"><a class="link-card" title="熟悉的味道，不一样配方" href="https://immmmm.com/bb-talks-json/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://gravatar.loli.net/avatar/ba83fa02fc4b2ba621514941307e21be"/></div><div class="right"><p class="text">熟悉的味道，不一样配方</p><p class="url">https://immmmm.com/bb-talks-json/</p></div></a></div><h3 id="介绍">介绍</h3><div class="note blue icon modern"><i class="note-icon fa fa-info-circle"></i><p>首页轮播参照小冰老师叨叨点啥进行修改，使用bber的可以参照本教程，使用叨叨请移步以下链接</p></div><div class="tag link"><a class="link-card" title="Hexo Buffterfly主题增加叨叨点啥" href="https://www.heyiki.top/posts/c66dcdf5.html"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://gitee.com/Heyiki/image/raw/master/image/1.jpg"/></div><div class="right"><p class="text">Hexo Buffterfly主题增加叨叨点啥</p><p class="url">https://www.heyiki.top/posts/c66dcdf5.html</p></div></a></div><h3 id="安装hexo-bbds">安装hexo-bbds</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-bbds --save</span><br></pre></td></tr></table></figure><p>安装完成以后修改 <code>config.yml</code> 文件，添加以下代码</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">daodao_swiper:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">https://xxxx.tcb.qcloud.la/json/bber.json</span> <span class="comment"># 这里是你的转存的json地址</span></span><br><span class="line">  <span class="attr">fliter:</span> <span class="string">&quot;[&#x27;img&#x27;,&#x27;iframe&#x27;, &#x27;png&#x27;, &#x27;jpg&#x27;]&quot;</span> <span class="comment"># 将png jpg img等链接过滤</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 仅在首页显示</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">temple_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;height: auto;width: 100%&quot;&gt;&lt;div class=&quot;bbTimeList container&quot; style=&quot;height: auto;width: 100%&quot; id=&quot;bbTimeList&quot;&gt;&lt;i class=&quot;bber-gotobb fas fa-bullhorn&quot; onclick=&quot;location=&amp;#39;/life/&amp;#39;&quot; title=&quot;哔哔点啥&quot;&gt;&lt;/i&gt;&lt;div class=&quot;swiper-container&quot; id=&quot;bbtalk&quot;&gt;&lt;div class=&quot;swiper-wrapper&quot; id=&quot;bber-talk&quot; onclick=&quot;location=&amp;#39;/life/&amp;#39;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;i class=&quot;bber-gotobb fas fa-arrow-circle-right&quot; onclick=&quot;location=&amp;quot;/life/&amp;quot;&quot; title=&quot;查看全文&quot;&gt;&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br></pre></td></tr></table></figure><div class="note pink icon flat"><i class="note-icon fa fa-at"></i><p>如果想要githubcalendar在首页轮播下方，请确保你的插件 <code>hexo-githubcalendar</code>的版本是 <code>1.2.3</code> 低于该版本请升级之后，修改priority的数值比daodao_swiper的小即可</p></div><h2 id="picX图床">picX图床</h2><div class="note orange icon flat"><i class="note-icon fas fa-battery-half"></i><p>一个简单的图床工具，进入点击使用教程~</p></div><div class="tag link"><a class="link-card" title="picX图床" href="https://picx.xpoet.cn/#/upload"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://picx.xpoet.cn/assets/logo.206d082d.png"/></div><div class="right"><p class="text">picX图床</p><p class="url">https://picx.xpoet.cn/#/upload</p></div></a></div><h2 id="Lorem-Picsum">Lorem Picsum</h2><div class="tag link"><a class="link-card" title="Lorem Picsum" href="https://picsum.photos/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://picsum.photos/seed/picsum/200/300"/></div><div class="right"><p class="text">Lorem Picsum</p><p class="url">https://picsum.photos/</p></div></a></div><h2 id="utool插件图床-fileBed">utool插件图床(fileBed)</h2><div class="tip key"><p>请安装utools后，插件中心中搜索图床，安装fileBed图床，按照相应配置文件进行配置</p></div>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发布一个npm包</title>
      <link href="f5fee1ca/"/>
      <url>f5fee1ca/</url>
      
        <content type="html"><![CDATA[<div class="tip faa-horizontal animated"><p>我们每天都要安装各种npm依赖，那npm是怎么发布到远程仓库中的?<br>下面展示一个包发布到npm中的方法。</p></div><h2 id="构建一个npm包">构建一个npm包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><h3 id="初始化参数">初始化参数</h3><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>name: 项目的名称，确保在npm包里是独一无二的</p>            </div><div class='checkbox red checked'><input type="checkbox" checked="checked"/>            <p>version: 版本号默认1.0.0</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>description: 包描述</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>entry point: 包主入口文件，默认index.js</p>            </div><div class='checkbox cyan'><input type="checkbox" />            <p>test command: 测试命令</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>git repository: git远程地址</p>            </div><div class='checkbox green'><input type="checkbox" />            <p>keywords: 关键词</p>            </div><div class='checkbox yellow'><input type="checkbox" />            <p>author: 作者</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>license: MIT</p>            </div><h2 id="添加README-md"><a href="http://xn--README-2e4jg12p.md">添加README.md</a></h2><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxxx</span><br></pre></td></tr></table></figure><h2 id="注册npm账号">注册npm账号</h2><ul><li><a href="https://www.npmjs.com">npm官网</a></li><li>记住自己的账号和密码(之后需要)</li></ul><div class="tip ban faa-horizontal animated"><p>下面的操作请确保你的node没有配置淘宝或其他镜像地址，否则执行 <code>npm config set registry https://registry.npmjs.org/</code> 将源调整回来</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">添加npm账户</button></li><li class="tab"><button type="button" data-href="#test1-2">填入参数</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm adduser</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username:</span><br><span class="line">password:</span><br><span class="line">email:</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="发布npm">发布npm</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish --access=public</span><br></pre></td></tr></table></figure><ul><li>进入<a href="https://www.npmjs.com">官网</a>查找你的包</li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蜡烛吹灭动画</title>
      <link href="33c03019/"/>
      <url>33c03019/</url>
      
        <content type="html"><![CDATA[<div class="tip faa-horizontal animated"><p>一个来自gitee上的项目，<emp><a href="https://gitee.com/ji-xia-xiaozhen/html-demo">仓库地址</a></emp></p></div><iframe id="cp_embed_NWpXgvM" src="//codepen.io/milkdue/embed/NWpXgvM?height=300&theme-id=dark&slug-hash=NWpXgvM&default-tab=html,result&editable=true" scrolling="no" frameborder="no" height="300" allowTransparency="true" allowfullscreen="true" class="cp_embed_iframe" style="width: 100%; overflow: hidden;"></iframe><iframe src="https://codesandbox.io/embed/holy-smoke-u192q?expanddevtools=0&fontsize=14&hidenavigation=1&theme=dark" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;"    title="holy-smoke-u192q"    allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"    sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"  ></iframe>]]></content>
      
      
      <categories>
          
          <category> 作品集 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bufferfly主题的应用和即时推送</title>
      <link href="317ea436/"/>
      <url>317ea436/</url>
      
        <content type="html"><![CDATA[<h2 id="关于bufferfly的安装">关于bufferfly的安装</h2><ul><li>请查看以下官方文档</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://butterfly.js.org/posts/21cfbf15/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="valine的应用">valine的应用</h2><h3 id="遵循valine的指示配置你的LeanCloud">遵循valine的指示配置你的LeanCloud</h3><ul><li><code>bufferfly</code> 中使用 <code>valine</code> 在上方文档中，有所提及，下方文档是关于如果配置 <code>leanCloud</code> 的文档</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://valine.js.org/quickstart.html' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h3 id="评论的邮件提醒">评论的邮件提醒</h3><ul><li><code>bufferfly</code> 应用 <code>valine</code> 的评论系统上方官方文档有所提及，关于开启邮件提醒</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://github.com/zhaojun1998/Valine-Admin' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="twikoo的应用">twikoo的应用</h2><ul><li><code>bufferfly</code> 支持双评论系统，只需要按照文档中的指示去配置自己的评论系统即可</li><li><code>Twikoo</code> 是一个简洁、安全、无后端的静态网站评论系统，基于<a href="https://cloud.tencent.com/act/pro/cloudbase01?fromSource=gwzcw.3814800.3814800.3814800&amp;utm_medium=cps&amp;utm_id=gwzcw.3814800.3814800.3814800&amp;cps_key=44b3b34da3e3b77bae971b11ed4b2639">腾讯云开发</a></li><li>关于如何配置twikoo评论系统，请参考官方文档，并按照bufferfly的指示配置自己的环境id</li></ul><div class="btns rounded center grid5">            <a class="button" href='https://twikoo.js.org/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="server酱和邮件的推送服务">server酱和邮件的推送服务</h2><ol><li>点击twikoo设置按钮</li><li>微信提醒需要设置SC_SENDKEY(请在server酱中获取，只支持博主提醒)</li><li>邮件(QQ邮箱)提醒按照下方配置设置</li></ol><div class="hide-toggle" ><div class="hide-button toggle-title" style=""><i class="fas fa-caret-right fa-fw"></i><span>邮件提醒</span></div>    <div class="hide-content"><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &#x27;SENDER_EMAIL&#x27;: &#x27;xxxx.@qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_SERVICE&#x27;: &#x27;QQ&#x27;,</span><br><span class="line">    &#x27;SMTP_HOST&#x27;: &#x27;smtp.qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_SECURE&#x27;: true,</span><br><span class="line">    &#x27;SMTP_USER&#x27;: &#x27;xxxx.@qq.com&#x27;,</span><br><span class="line">    &#x27;SMTP_PASS&#x27;: &#x27;QQ邮箱授权码，开启smtp&#x27;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="btns rounded center grid5">            <a class="button" href='http://sc.ftqq.com/9.version' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div><h2 id="关于哔哔点啥">关于哔哔点啥</h2><ol><li>对于哔哔点啥可参考<a href="https://immmmm.com/">木木</a>的文档自行配置，更多样式配置请参考</li></ol><div class="tag link"><a class="link-card" title="给bber换个皮肤" href="https://www.antmoe.com/posts/7ec820ee/"><div class="left"><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://7.dusays.com/2021/03/24/8a39889ea730e.png"/></div><div class="right"><p class="text">给bber换个皮肤</p><p class="url">https://www.antmoe.com/posts/7ec820ee/</p></div></a></div><div class="btns rounded center grid5">            <a class="button" href='https://immmmm.com/bb-by-wechat-pro/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github-jsdelivr搭建自己的免费cdn</title>
      <link href="c7f33302/"/>
      <url>c7f33302/</url>
      
        <content type="html"><![CDATA[<ul><li>新建一个github仓库，命名为cdn</li><li>关联仓库，将文件push上去</li></ul><p><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.1/blog/cdn/1.png" alt="release"></p><ul><li>填写tag version版本号</li><li>jsDeliver的引用</li></ul><div class="hide-toggle" style="border: 1px solid #FF7242"><div class="hide-button toggle-title" style="background-color: #FF7242;color: #fff"><i class="fas fa-caret-right fa-fw"></i><span>jsDeliver的引用</span></div>    <div class="hide-content"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径</span><br><span class="line"></span><br><span class="line"># 例如</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;milkdue&#x2F;cdn@1.1&#x2F;img&#x2F;avatar.jpg</span><br></pre></td></tr></table></figure></div></div><span class="hide-inline"><button type="button" class="hide-button button--animated" style="">小提示  </button><span class="hide-content">新上传文件后需要发布新版本Draft a new release</span></span>]]></content>
      
      
      <categories>
          
          <category> 学习&amp;教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cdn </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单词速听</title>
      <link href="4fd0a8fb/"/>
      <url>4fd0a8fb/</url>
      
        <content type="html"><![CDATA[<h2 id="第一天">第一天</h2><details ><summary> 第一天 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/milkdue/cdn@1.5/img/loading.gif" data-original="https://cdn.jsdelivr.net/npm/akilar-candyassets/image/fVwSyU7abiN1zW6.jpg" alt=""><br>施工中~</p>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 听力练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单词 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
